[{"/Users/cocoball/Korello/src/index.js":"1","/Users/cocoball/Korello/src/App.js":"2","/Users/cocoball/Korello/src/pages/BoardPage.jsx":"3","/Users/cocoball/Korello/src/pages/LoginPage.jsx":"4","/Users/cocoball/Korello/src/components/user/LoginForm.jsx":"5","/Users/cocoball/Korello/src/components/board/BoardList.jsx":"6","/Users/cocoball/Korello/src/components/card/CardList.jsx":"7","/Users/cocoball/Korello/src/api/index.js":"8","/Users/cocoball/Korello/src/components/board/NewBoardForm.jsx":"9","/Users/cocoball/Korello/src/components/board/BoardForm.jsx":"10","/Users/cocoball/Korello/src/components/card/AddTagButton.jsx":"11","/Users/cocoball/Korello/src/components/card/TagForm.jsx":"12","/Users/cocoball/Korello/src/components/card/AddCardButton.jsx":"13","/Users/cocoball/Korello/src/components/card/CardListForm.jsx":"14","/Users/cocoball/Korello/src/components/card/CardModal.jsx":"15","/Users/cocoball/Korello/src/components/modal/CalendarModal.jsx":"16","/Users/cocoball/Korello/src/components/modal/Label.jsx":"17","/Users/cocoball/Korello/src/components/modal/ChecklistModal.jsx":"18","/Users/cocoball/Korello/src/components/modal/Checklist.jsx":"19","/Users/cocoball/Korello/src/assets/colors.js":"20","/Users/cocoball/Korello/src/components/modal/ChecklistForm.jsx":"21","/Users/cocoball/Korello/src/pages/NotFound.jsx":"22"},{"size":236,"mtime":1611036616437,"results":"23","hashOfConfig":"24"},{"size":1097,"mtime":1611042534823,"results":"25","hashOfConfig":"24"},{"size":708,"mtime":1611033545929,"results":"26","hashOfConfig":"24"},{"size":974,"mtime":1611043184280,"results":"27","hashOfConfig":"24"},{"size":1425,"mtime":1610718270107,"results":"28","hashOfConfig":"24"},{"size":1260,"mtime":1610718270096,"results":"29","hashOfConfig":"24"},{"size":1068,"mtime":1610718270099,"results":"30","hashOfConfig":"24"},{"size":3380,"mtime":1611043568458,"results":"31","hashOfConfig":"24"},{"size":1388,"mtime":1610718270097,"results":"32","hashOfConfig":"24"},{"size":864,"mtime":1610718270095,"results":"33","hashOfConfig":"24"},{"size":1859,"mtime":1610718270098,"results":"34","hashOfConfig":"24"},{"size":1675,"mtime":1610718270101,"results":"35","hashOfConfig":"24"},{"size":1617,"mtime":1610718270098,"results":"36","hashOfConfig":"24"},{"size":3052,"mtime":1610718270100,"results":"37","hashOfConfig":"24"},{"size":2386,"mtime":1610718270101,"results":"38","hashOfConfig":"24"},{"size":274,"mtime":1610718270103,"results":"39","hashOfConfig":"24"},{"size":5279,"mtime":1610718812494,"results":"40","hashOfConfig":"24"},{"size":1433,"mtime":1610718270105,"results":"41","hashOfConfig":"24"},{"size":2026,"mtime":1610718270103,"results":"42","hashOfConfig":"24"},{"size":316,"mtime":1610718270088,"results":"43","hashOfConfig":"24"},{"size":2102,"mtime":1610718270104,"results":"44","hashOfConfig":"24"},{"size":126,"mtime":1611031773432,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dtepcc",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/cocoball/Korello/src/index.js",["97","98","99"],"/Users/cocoball/Korello/src/App.js",["100","101"],"/Users/cocoball/Korello/src/pages/BoardPage.jsx",["102"],"import React, { useState } from 'react';\nimport queryString from 'query-string';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport BoardList from '../components/board/BoardList';\nimport CardList from '../components/card/CardList';\nimport { setAccessToken } from '../api';\n\nconst BoardPage = ({ match, history, location }) => {\n  if (location.search.length > 0) {\n    setAccessToken(queryString.parse(location.search));\n  }\n\n  return (\n    <Router>\n      <Route exact path={match.path} component={BoardList} />\n      <Route\n        path={`${match.path.slice(0, match.path.length - 1)}/:id/cards`}\n        component={CardList}\n      />\n    </Router>\n  );\n};\n\nexport default BoardPage;\n",["103","104"],"/Users/cocoball/Korello/src/pages/LoginPage.jsx",["105","106"],"/Users/cocoball/Korello/src/components/user/LoginForm.jsx",["107"],"import React, { memo, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst obj = {\n  email: 'seokho9522@gmail.com',\n  password: '1111',\n};\n\nconst LoginForm = props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const inputRef = useRef(null);\n  const history = useHistory();\n\n  const onChangeForm = e => {\n    if (e.target.name === 'email') {\n      setEmail(e.target.value);\n    } else if (e.target.name === 'password') {\n      setPassword(e.target.value);\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === obj.email && password === obj.password) {\n      props.handler();\n      history.push('/boards');\n    } else {\n      alert('아이디 혹은 비밀번호가 올바르지 않습니다.');\n      setEmail('');\n      setPassword('');\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <div id='loginform'>\n      <form onSubmit={onSubmit}>\n        <h5>아이디</h5>\n        <input\n          ref={inputRef}\n          name='email'\n          type='email'\n          value={email}\n          onChange={onChangeForm}\n        />\n        <h5>비밀번호</h5>\n        <input\n          name='password'\n          type='password'\n          value={password}\n          onChange={onChangeForm}\n        />\n        <br></br>\n        <button>로그인</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/cocoball/Korello/src/components/board/BoardList.jsx",[],"/Users/cocoball/Korello/src/components/card/CardList.jsx",[],"/Users/cocoball/Korello/src/api/index.js",["108","109","110"],"/Users/cocoball/Korello/src/components/board/NewBoardForm.jsx",[],"/Users/cocoball/Korello/src/components/board/BoardForm.jsx",[],"/Users/cocoball/Korello/src/components/card/AddTagButton.jsx",[],"/Users/cocoball/Korello/src/components/card/TagForm.jsx",["111","112"],"import React, { useState, memo, useCallback } from 'react';\nimport AddCardButton from './AddCardButton';\nimport CardListForm from './CardListForm';\nimport { useUpdateApi } from '../../api/index';\nimport { useDrop } from 'react-dnd';\n\nconst TagForm = ({ data, tag, boardUrl, setUpdate }) => {\n  const [updateData] = useUpdateApi();\n\n  const appendItem = useCallback(async item => {\n    if (item.tagValue !== tag) {\n      const code = await updateData(\n        boardUrl.slice(0, boardUrl.length - 1) + '/tag',\n        {\n          id: item.id,\n          tagValue: tag,\n        },\n      );\n      if (code === 200) {\n        setUpdate(p => !p);\n      } else {\n        alert('이동 실패');\n      }\n    }\n  });\n\n  const [{ hovered }, drop] = useDrop({\n    accept: 'card',\n    drop: appendItem,\n    collect: monitor => {\n      return {\n        hovered: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <div className='tag'>\n      <div className='tag-header'>{tag}</div>\n      <div\n        className={`drop-area ${hovered ? 'drop-area-hovered' : ''}`}\n        ref={drop}\n      >\n        {console.log(data)}\n        {data\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            return (\n              <CardListForm\n                key={el.id}\n                id={el.id}\n                title={el.name}\n                memberNames={el.memberNames}\n                labels={el.labels}\n                tag={tag}\n                url={boardUrl}\n                setUpdate={setUpdate}\n              />\n            );\n          })}\n      </div>\n      <AddCardButton tag={tag} url={boardUrl} setUpdate={setUpdate} />\n    </div>\n  );\n};\n\nexport default memo(TagForm);\n","/Users/cocoball/Korello/src/components/card/AddCardButton.jsx",[],"/Users/cocoball/Korello/src/components/card/CardListForm.jsx",[],"/Users/cocoball/Korello/src/components/card/CardModal.jsx",["113"],"import React, { useState } from 'react';\nimport Label from '../modal/Label';\nimport CheckListModal from '../modal/ChecklistModal';\nimport Checklist from '../modal/Checklist';\nimport CalendarModal from '../modal/CalendarModal';\nimport { useGetApi } from '../../api';\n\nconst CardModal = ({ onClose, id, title, tag, url, setUpdate, labels }) => {\n  const [modalUpdate, setModalUpdate] = useState(false);\n  const [data] = useGetApi('get', `/card/${id}/todo`, modalUpdate);\n\n  const progressCalculator = data => {\n    let count = 0;\n    data.map(el => {\n      if (el.status) {\n        count++;\n      }\n    });\n    const result = Math.round((count / data.length) * 100);\n    return result;\n  };\n\n  return (\n    <>\n      <div className='modal-container' />\n      <div className='modal-wrapper'>\n        <div tabIndex='0' className='modal-inner'>\n          <button className='modal-close' onClick={onClose}>\n            X\n          </button>\n          <div className='modal-header'>\n            <div className='modal-labels'>\n              {labels.length > 0\n                ? labels.map((el, i) => (\n                    <span\n                      key={i}\n                      className='label'\n                      style={{\n                        backgroundColor: el.color,\n                      }}\n                    >\n                      {el.name}\n                    </span>\n                  ))\n                : null}\n            </div>\n            <h2>{title}</h2>\n          </div>\n          <div className='modal-contents'>\n            {data.length > 0 ? (\n              <div className='checklist-container'>\n                <Checklist\n                  id={id}\n                  data={data}\n                  setUpdate={setModalUpdate}\n                  percent={progressCalculator(data)}\n                />\n              </div>\n            ) : null}\n          </div>\n          <div className='modal-sidebar'>\n            <Label\n              url={url}\n              id={id}\n              modalUpdate={modalUpdate}\n              setModalUpdate={setModalUpdate}\n              setUpdate={setUpdate}\n              labels={labels}\n            />\n            <CheckListModal id={id} setUpdate={setModalUpdate} />\n            <CalendarModal />\n            <div>CheckList, Duedate, Calendar</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CardModal;\n","/Users/cocoball/Korello/src/components/modal/CalendarModal.jsx",["114","115"],"import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n\nconst CalendarModal = () => {\n  const [value, onChange] = useState(new Date());\n  return <div>{/* <Calendar onChange={onChange} value={value} /> */}</div>;\n};\n\nexport default CalendarModal;\n","/Users/cocoball/Korello/src/components/modal/Label.jsx",["116","117"],"import React, { useState } from 'react';\nimport { usePostApi, useGetApi } from '../../api/index';\nimport colors from '../../assets/colors';\n\nconst Label = ({ id, url, modalUpdate, setModalUpdate, setUpdate, labels }) => {\n  const [openLabel, setOpenLabel] = useState(false);\n  const [selectColor, setSelectColor] = useState('');\n  const [labelName, setLabelName] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [postData] = usePostApi();\n  const [data] = useGetApi(\n    'get',\n    url.slice(0, url.length - 6) + '/label',\n    modalUpdate,\n  );\n\n  const onChangeHandler = e => {\n    setLabelName(e.target.value);\n  };\n  const openLabelButton = () => {\n    setOpenLabel(p => !p);\n  };\n  const selectButton = e => {\n    setSelectColor(e.target.className);\n  };\n  const handleDisplay = () => {\n    setDisplay(p => !p);\n  };\n\n  const deleteLabel = async e => {\n    // console.log(e.target.name);\n    // console.log(url);\n    // const code = await postData(\n    //   url.slice(0, url.length - 6) + '/label/delete',\n    //   {\n    //     labelsIds: e.target.name,\n    //   },\n    // );\n    // if (code === 200) {\n    //   setSelectColor('');\n    //   setLabelName('');\n    // } else {\n    //   alert('삭제 실패');\n    // }\n  };\n\n  const addBoardLabelButton = async () => {\n    if (labelName.length > 0 && selectColor.length > 0) {\n      const code = await postData(url.slice(0, url.length - 6) + '/label', {\n        name: labelName,\n        color: selectColor,\n      });\n\n      if (code === 201) {\n        setSelectColor('');\n        setLabelName('');\n        setDisplay(p => !p);\n        setModalUpdate(p => !p);\n      } else {\n        alert('추가 실패');\n      }\n    } else {\n      alert('이름과 색을 정해주세요!');\n    }\n  };\n\n  const checkOverlap = (arr, id) => {\n    let result = false;\n    arr.map(el => {\n      if (el.id === id) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  const addCardLabelButton = async e => {\n    const code = checkOverlap(labels, e.target.id)\n      ? await postData(`/card/${id}/label/delete`, {\n          labelIds: [e.target.id],\n        })\n      : await postData(`/card/${id}/label`, {\n          labelId: e.target.id,\n        });\n\n    if (code === 201 || code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  const newRenderColors = () => {\n    let colorlist = {};\n    data.map(el => {\n      colorlist[el.color] = data.indexOf(el);\n    });\n\n    return colors.map((el, i) => {\n      if (colorlist[el.color] !== undefined) {\n        let value = data[colorlist[el.color]];\n\n        return (\n          <div\n            key={i}\n            style={{\n              display: 'flex',\n            }}\n          >\n            <span\n              // key={i}\n              id={value.id}\n              className={value.color}\n              style={{\n                backgroundColor: value.color,\n                color: '#fff',\n                display: 'block',\n                // float: 'left',\n                margin: '2px',\n                width: '160px',\n                height: '20px',\n                padding: '3px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={addCardLabelButton}\n            >\n              {value.name}\n            </span>\n            <button\n              name={value.id}\n              onClick={deleteLabel}\n              style={{ float: 'right' }}\n            >\n              X\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} style={{ display: 'flex' }}>\n            <span\n              // key={i}\n              className={el.color}\n              style={{\n                backgroundColor: el.color,\n                color: '#fff',\n                display: 'inline-block',\n                margin: '1px',\n                padding: '3px',\n                width: '160px',\n                height: '20px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={selectButton}\n            ></span>\n          </div>\n        );\n      }\n    });\n  };\n  return (\n    <div className='add-card-label-button'>\n      <button onClick={openLabelButton}>Label</button>\n      {openLabel ? (\n        <div className='label-modal' style={{ overflow: 'auto' }}>\n          {newRenderColors()}\n          <div\n            className='label-form'\n            style={{ display: display ? 'block' : 'none' }}\n          >\n            <input\n              value={labelName}\n              onChange={onChangeHandler}\n              style={{\n                backgroundColor: selectColor,\n                width: '160px',\n                borderRadius: '3px',\n                color: selectColor === '' ? 'black' : '#fff',\n              }}\n              placeholder='title'\n            />\n            <button onClick={addBoardLabelButton}>Add Label</button>\n            <button onClick={handleDisplay}>Cancel</button>\n          </div>\n\n          <button\n            onClick={handleDisplay}\n            style={{ display: display ? 'none' : 'block' }}\n          >\n            Add Label\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Label;\n","/Users/cocoball/Korello/src/components/modal/ChecklistModal.jsx",[],"/Users/cocoball/Korello/src/components/modal/Checklist.jsx",[],"/Users/cocoball/Korello/src/assets/colors.js",[],"/Users/cocoball/Korello/src/components/modal/ChecklistForm.jsx",[],"/Users/cocoball/Korello/src/pages/NotFound.jsx",[],{"ruleId":"118","severity":1,"message":"119","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"122","line":3,"column":18,"nodeType":"120","messageId":"121","endLine":3,"endColumn":23},{"ruleId":"118","severity":1,"message":"123","line":3,"column":25,"nodeType":"120","messageId":"121","endLine":3,"endColumn":38},{"ruleId":"118","severity":1,"message":"124","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"125","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":13},{"ruleId":"118","severity":1,"message":"124","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"118","severity":1,"message":"124","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":24,"column":11,"nodeType":"132","endLine":27,"endColumn":13},{"ruleId":"118","severity":1,"message":"133","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":33,"column":6,"nodeType":"136","endLine":33,"endColumn":22,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":54,"column":19,"nodeType":"140","messageId":"141","endLine":54,"endColumn":21},{"ruleId":"134","severity":1,"message":"142","line":82,"column":6,"nodeType":"136","endLine":82,"endColumn":14,"suggestions":"143"},{"ruleId":"118","severity":1,"message":"124","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"144","line":10,"column":22,"nodeType":"120","endLine":10,"endColumn":33},{"ruleId":"138","severity":1,"message":"139","line":14,"column":17,"nodeType":"140","messageId":"141","endLine":14,"endColumn":19},{"ruleId":"118","severity":1,"message":"145","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":15},{"ruleId":"118","severity":1,"message":"146","line":5,"column":17,"nodeType":"120","messageId":"121","endLine":5,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":69,"column":16,"nodeType":"140","messageId":"141","endLine":69,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":96,"column":17,"nodeType":"140","messageId":"141","endLine":96,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'memo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'method' and 'uri'. Either include them or remove the dependency array.","ArrayExpression",["149"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'uri'. Either include it or remove the dependency array.",["150"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [method, state1, state2, uri]",{"range":"155","text":"156"},"Update the dependencies array to be: [update, uri]",{"range":"157","text":"158"},[915,931],"[method, state1, state2, uri]",[2134,2142],"[update, uri]"]