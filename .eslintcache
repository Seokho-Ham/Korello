[{"/Users/cocoball/Korello/src/index.js":"1","/Users/cocoball/Korello/src/App.js":"2","/Users/cocoball/Korello/src/pages/BoardPage.jsx":"3","/Users/cocoball/Korello/src/pages/LoginPage.jsx":"4","/Users/cocoball/Korello/src/components/user/LoginForm.jsx":"5","/Users/cocoball/Korello/src/components/board/BoardList.jsx":"6","/Users/cocoball/Korello/src/components/card/CardList.jsx":"7","/Users/cocoball/Korello/src/api/index.js":"8","/Users/cocoball/Korello/src/components/board/NewBoardForm.jsx":"9","/Users/cocoball/Korello/src/components/board/BoardForm.jsx":"10","/Users/cocoball/Korello/src/components/card/AddTagButton.jsx":"11","/Users/cocoball/Korello/src/components/card/TagForm.jsx":"12","/Users/cocoball/Korello/src/components/card/AddCardButton.jsx":"13","/Users/cocoball/Korello/src/components/card/CardListForm.jsx":"14","/Users/cocoball/Korello/src/components/card/CardModal.jsx":"15","/Users/cocoball/Korello/src/components/modal/CalendarModal.jsx":"16","/Users/cocoball/Korello/src/components/modal/Label.jsx":"17","/Users/cocoball/Korello/src/components/modal/ChecklistModal.jsx":"18","/Users/cocoball/Korello/src/components/modal/Checklist.jsx":"19","/Users/cocoball/Korello/src/assets/colors.js":"20","/Users/cocoball/Korello/src/components/modal/ChecklistForm.jsx":"21"},{"size":171,"mtime":1610718221251,"results":"22","hashOfConfig":"23"},{"size":949,"mtime":1610720375720,"results":"24","hashOfConfig":"23"},{"size":506,"mtime":1610718270117,"results":"25","hashOfConfig":"23"},{"size":933,"mtime":1610720726234,"results":"26","hashOfConfig":"23"},{"size":1425,"mtime":1610718270107,"results":"27","hashOfConfig":"23"},{"size":1260,"mtime":1610718270096,"results":"28","hashOfConfig":"23"},{"size":1068,"mtime":1610718270099,"results":"29","hashOfConfig":"23"},{"size":3521,"mtime":1610718586837,"results":"30","hashOfConfig":"23"},{"size":1388,"mtime":1610718270097,"results":"31","hashOfConfig":"23"},{"size":864,"mtime":1610718270095,"results":"32","hashOfConfig":"23"},{"size":1859,"mtime":1610718270098,"results":"33","hashOfConfig":"23"},{"size":1675,"mtime":1610718270101,"results":"34","hashOfConfig":"23"},{"size":1617,"mtime":1610718270098,"results":"35","hashOfConfig":"23"},{"size":3052,"mtime":1610718270100,"results":"36","hashOfConfig":"23"},{"size":2386,"mtime":1610718270101,"results":"37","hashOfConfig":"23"},{"size":274,"mtime":1610718270103,"results":"38","hashOfConfig":"23"},{"size":5279,"mtime":1610718812494,"results":"39","hashOfConfig":"23"},{"size":1433,"mtime":1610718270105,"results":"40","hashOfConfig":"23"},{"size":2026,"mtime":1610718270103,"results":"41","hashOfConfig":"23"},{"size":316,"mtime":1610718270088,"results":"42","hashOfConfig":"23"},{"size":2102,"mtime":1610718270104,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dtepcc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cocoball/Korello/src/index.js",[],["94","95"],"/Users/cocoball/Korello/src/App.js",[],"/Users/cocoball/Korello/src/pages/BoardPage.jsx",[],"/Users/cocoball/Korello/src/pages/LoginPage.jsx",["96","97","98","99"],"import React, { useState } from 'react';\nimport LoginForm from '../components/user/LoginForm';\n// import SigninForm from '../components/user/SigninForm';\n\nconst LoginPage = props => {\n  const { handler } = props;\n\n  // const onClickSignIn = () => {\n  //   setClicked('signin');\n  // };\n\n  return (\n    <>\n      {/* <button onClick={onClickSignIn}>SignIn</button> */}\n      <div\n        id='login'\n        style={{ textAlign: 'center', height: '1200px', margin: '20px' }}\n      >\n        {/* {clicked === 'login' ? <LoginForm handler={handler} /> : <SigninForm />} */}\n        {/* <LoginForm handler={handler} /> */}\n        <a\n          id='custom-login-btn'\n          href='http://hyuki.app/oauth2/authorization/kakao'\n        >\n          <img\n            src='//k.kakaocdn.net/14/dn/btqCn0WEmI3/nijroPfbpCa4at5EIsjyf0/o.jpg'\n            width='222'\n          />\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default LoginPage;\n","/Users/cocoball/Korello/src/components/user/LoginForm.jsx",["100"],"import React, { memo, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst obj = {\n  email: 'seokho9522@gmail.com',\n  password: '1111',\n};\n\nconst LoginForm = props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const inputRef = useRef(null);\n  const history = useHistory();\n\n  const onChangeForm = e => {\n    if (e.target.name === 'email') {\n      setEmail(e.target.value);\n    } else if (e.target.name === 'password') {\n      setPassword(e.target.value);\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === obj.email && password === obj.password) {\n      props.handler();\n      history.push('/boards');\n    } else {\n      alert('아이디 혹은 비밀번호가 올바르지 않습니다.');\n      setEmail('');\n      setPassword('');\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <div id='loginform'>\n      <form onSubmit={onSubmit}>\n        <h5>아이디</h5>\n        <input\n          ref={inputRef}\n          name='email'\n          type='email'\n          value={email}\n          onChange={onChangeForm}\n        />\n        <h5>비밀번호</h5>\n        <input\n          name='password'\n          type='password'\n          value={password}\n          onChange={onChangeForm}\n        />\n        <br></br>\n        <button>로그인</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/cocoball/Korello/src/components/board/BoardList.jsx",[],"/Users/cocoball/Korello/src/components/card/CardList.jsx",[],"/Users/cocoball/Korello/src/api/index.js",["101","102","103"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst serverUrl = 'http://222.117.225.28:8080/api/v1';\n\n//GET--------------------------------------------------------------------------------\nconst useGetApi = (method, uri, state1, state2) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState('loading');\n  const [code, setCode] = useState(0);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        let { data } = await axios[method](serverUrl + uri);\n        console.log('get요청');\n        console.log(typeof data);\n        if (data.result_body) {\n          setData(data.result_body);\n        }\n        setCode(data.result_code);\n        setLoading('finished');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getData();\n  }, [state1, state2]);\n  return [data, code, loading];\n};\n\nconst useGetCardApi = uri => {\n  const [update, setUpdate] = useState(false);\n  const [tagList, setTagList] = useState([]);\n  const [cardList, setCardList] = useState([]);\n\n  useEffect(() => {\n    const getCard = async () => {\n      let { data } = await axios.get(serverUrl + uri);\n      console.log('getCard 요청');\n      console.log(typeof data);\n      let { result_body } = data;\n\n      if (result_body.length > 0) {\n        const obj = {};\n        const tags = [];\n        const cards = [];\n        result_body\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            let cardObj = {\n              id: el.id,\n              name: el.name,\n              tagValue: el.tagValue,\n              memberNames: el.memberNames,\n              labels: el.labels,\n              createDate: el.createDate,\n              updateDate: el.updateDate,\n            };\n\n            if (!obj[el.tagValue]) {\n              obj[el.tagValue] = [cardObj];\n            } else {\n              obj[el.tagValue].push(cardObj);\n            }\n          });\n\n        for (let i in obj) {\n          tags.push(i);\n          cards.push(obj[i]);\n        }\n\n        setTagList(tags);\n        setCardList(cards);\n      }\n    };\n    getCard();\n  }, [update]);\n\n  return [tagList, cardList, setUpdate];\n};\n\n//POST--------------------------------------------------------------------------------\nconst usePostApi = () => {\n  const postData = async (uri, body) => {\n    try {\n      let { data } = await axios.post(serverUrl + uri, body);\n      console.log('post 요청');\n      console.log(typeof data);\n      return data.result_code;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [postData];\n};\n\n//UPDATE--------------------------------------------------------------------------------\nconst useUpdateApi = () => {\n  const updateData = async (url, body) => {\n    try {\n      const { data } = await axios.put(serverUrl + url, body);\n      console.log('update 요청');\n      console.log(typeof data);\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return [updateData];\n};\n\n//DELETE-------------------------------------------------------------------------------\nconst useDeleteApi = () => {\n  const deleteData = async url => {\n    try {\n      const { data } = await axios.delete(serverUrl + url);\n      console.log('delete 요청');\n      console.log(data);\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return [deleteData];\n};\n\nexport { useGetApi, useGetCardApi, usePostApi, useUpdateApi, useDeleteApi };\n","/Users/cocoball/Korello/src/components/board/NewBoardForm.jsx",[],"/Users/cocoball/Korello/src/components/board/BoardForm.jsx",[],"/Users/cocoball/Korello/src/components/card/AddTagButton.jsx",[],"/Users/cocoball/Korello/src/components/card/TagForm.jsx",["104","105"],"import React, { useState, memo, useCallback } from 'react';\nimport AddCardButton from './AddCardButton';\nimport CardListForm from './CardListForm';\nimport { useUpdateApi } from '../../api/index';\nimport { useDrop } from 'react-dnd';\n\nconst TagForm = ({ data, tag, boardUrl, setUpdate }) => {\n  const [updateData] = useUpdateApi();\n\n  const appendItem = useCallback(async item => {\n    if (item.tagValue !== tag) {\n      const code = await updateData(\n        boardUrl.slice(0, boardUrl.length - 1) + '/tag',\n        {\n          id: item.id,\n          tagValue: tag,\n        },\n      );\n      if (code === 200) {\n        setUpdate(p => !p);\n      } else {\n        alert('이동 실패');\n      }\n    }\n  });\n\n  const [{ hovered }, drop] = useDrop({\n    accept: 'card',\n    drop: appendItem,\n    collect: monitor => {\n      return {\n        hovered: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <div className='tag'>\n      <div className='tag-header'>{tag}</div>\n      <div\n        className={`drop-area ${hovered ? 'drop-area-hovered' : ''}`}\n        ref={drop}\n      >\n        {console.log(data)}\n        {data\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            return (\n              <CardListForm\n                key={el.id}\n                id={el.id}\n                title={el.name}\n                memberNames={el.memberNames}\n                labels={el.labels}\n                tag={tag}\n                url={boardUrl}\n                setUpdate={setUpdate}\n              />\n            );\n          })}\n      </div>\n      <AddCardButton tag={tag} url={boardUrl} setUpdate={setUpdate} />\n    </div>\n  );\n};\n\nexport default memo(TagForm);\n","/Users/cocoball/Korello/src/components/card/AddCardButton.jsx",[],"/Users/cocoball/Korello/src/components/card/CardListForm.jsx",[],"/Users/cocoball/Korello/src/components/card/CardModal.jsx",["106"],"import React, { useState } from 'react';\nimport Label from '../modal/Label';\nimport CheckListModal from '../modal/ChecklistModal';\nimport Checklist from '../modal/Checklist';\nimport CalendarModal from '../modal/CalendarModal';\nimport { useGetApi } from '../../api';\n\nconst CardModal = ({ onClose, id, title, tag, url, setUpdate, labels }) => {\n  const [modalUpdate, setModalUpdate] = useState(false);\n  const [data] = useGetApi('get', `/card/${id}/todo`, modalUpdate);\n\n  const progressCalculator = data => {\n    let count = 0;\n    data.map(el => {\n      if (el.status) {\n        count++;\n      }\n    });\n    const result = Math.round((count / data.length) * 100);\n    return result;\n  };\n\n  return (\n    <>\n      <div className='modal-container' />\n      <div className='modal-wrapper'>\n        <div tabIndex='0' className='modal-inner'>\n          <button className='modal-close' onClick={onClose}>\n            X\n          </button>\n          <div className='modal-header'>\n            <div className='modal-labels'>\n              {labels.length > 0\n                ? labels.map((el, i) => (\n                    <span\n                      key={i}\n                      className='label'\n                      style={{\n                        backgroundColor: el.color,\n                      }}\n                    >\n                      {el.name}\n                    </span>\n                  ))\n                : null}\n            </div>\n            <h2>{title}</h2>\n          </div>\n          <div className='modal-contents'>\n            {data.length > 0 ? (\n              <div className='checklist-container'>\n                <Checklist\n                  id={id}\n                  data={data}\n                  setUpdate={setModalUpdate}\n                  percent={progressCalculator(data)}\n                />\n              </div>\n            ) : null}\n          </div>\n          <div className='modal-sidebar'>\n            <Label\n              url={url}\n              id={id}\n              modalUpdate={modalUpdate}\n              setModalUpdate={setModalUpdate}\n              setUpdate={setUpdate}\n              labels={labels}\n            />\n            <CheckListModal id={id} setUpdate={setModalUpdate} />\n            <CalendarModal />\n            <div>CheckList, Duedate, Calendar</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CardModal;\n","/Users/cocoball/Korello/src/components/modal/CalendarModal.jsx",["107","108"],"import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n\nconst CalendarModal = () => {\n  const [value, onChange] = useState(new Date());\n  return <div>{/* <Calendar onChange={onChange} value={value} /> */}</div>;\n};\n\nexport default CalendarModal;\n","/Users/cocoball/Korello/src/components/modal/Label.jsx",["109","110"],"import React, { useState } from 'react';\nimport { usePostApi, useGetApi } from '../../api/index';\nimport colors from '../../assets/colors';\n\nconst Label = ({ id, url, modalUpdate, setModalUpdate, setUpdate, labels }) => {\n  const [openLabel, setOpenLabel] = useState(false);\n  const [selectColor, setSelectColor] = useState('');\n  const [labelName, setLabelName] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [postData] = usePostApi();\n  const [data] = useGetApi(\n    'get',\n    url.slice(0, url.length - 6) + '/label',\n    modalUpdate,\n  );\n\n  const onChangeHandler = e => {\n    setLabelName(e.target.value);\n  };\n  const openLabelButton = () => {\n    setOpenLabel(p => !p);\n  };\n  const selectButton = e => {\n    setSelectColor(e.target.className);\n  };\n  const handleDisplay = () => {\n    setDisplay(p => !p);\n  };\n\n  const deleteLabel = async e => {\n    // console.log(e.target.name);\n    // console.log(url);\n    // const code = await postData(\n    //   url.slice(0, url.length - 6) + '/label/delete',\n    //   {\n    //     labelsIds: e.target.name,\n    //   },\n    // );\n    // if (code === 200) {\n    //   setSelectColor('');\n    //   setLabelName('');\n    // } else {\n    //   alert('삭제 실패');\n    // }\n  };\n\n  const addBoardLabelButton = async () => {\n    if (labelName.length > 0 && selectColor.length > 0) {\n      const code = await postData(url.slice(0, url.length - 6) + '/label', {\n        name: labelName,\n        color: selectColor,\n      });\n\n      if (code === 201) {\n        setSelectColor('');\n        setLabelName('');\n        setDisplay(p => !p);\n        setModalUpdate(p => !p);\n      } else {\n        alert('추가 실패');\n      }\n    } else {\n      alert('이름과 색을 정해주세요!');\n    }\n  };\n\n  const checkOverlap = (arr, id) => {\n    let result = false;\n    arr.map(el => {\n      if (el.id === id) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  const addCardLabelButton = async e => {\n    const code = checkOverlap(labels, e.target.id)\n      ? await postData(`/card/${id}/label/delete`, {\n          labelIds: [e.target.id],\n        })\n      : await postData(`/card/${id}/label`, {\n          labelId: e.target.id,\n        });\n\n    if (code === 201 || code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  const newRenderColors = () => {\n    let colorlist = {};\n    data.map(el => {\n      colorlist[el.color] = data.indexOf(el);\n    });\n\n    return colors.map((el, i) => {\n      if (colorlist[el.color] !== undefined) {\n        let value = data[colorlist[el.color]];\n\n        return (\n          <div\n            key={i}\n            style={{\n              display: 'flex',\n            }}\n          >\n            <span\n              // key={i}\n              id={value.id}\n              className={value.color}\n              style={{\n                backgroundColor: value.color,\n                color: '#fff',\n                display: 'block',\n                // float: 'left',\n                margin: '2px',\n                width: '160px',\n                height: '20px',\n                padding: '3px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={addCardLabelButton}\n            >\n              {value.name}\n            </span>\n            <button\n              name={value.id}\n              onClick={deleteLabel}\n              style={{ float: 'right' }}\n            >\n              X\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} style={{ display: 'flex' }}>\n            <span\n              // key={i}\n              className={el.color}\n              style={{\n                backgroundColor: el.color,\n                color: '#fff',\n                display: 'inline-block',\n                margin: '1px',\n                padding: '3px',\n                width: '160px',\n                height: '20px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={selectButton}\n            ></span>\n          </div>\n        );\n      }\n    });\n  };\n  return (\n    <div className='add-card-label-button'>\n      <button onClick={openLabelButton}>Label</button>\n      {openLabel ? (\n        <div className='label-modal' style={{ overflow: 'auto' }}>\n          {newRenderColors()}\n          <div\n            className='label-form'\n            style={{ display: display ? 'block' : 'none' }}\n          >\n            <input\n              value={labelName}\n              onChange={onChangeHandler}\n              style={{\n                backgroundColor: selectColor,\n                width: '160px',\n                borderRadius: '3px',\n                color: selectColor === '' ? 'black' : '#fff',\n              }}\n              placeholder='title'\n            />\n            <button onClick={addBoardLabelButton}>Add Label</button>\n            <button onClick={handleDisplay}>Cancel</button>\n          </div>\n\n          <button\n            onClick={handleDisplay}\n            style={{ display: display ? 'none' : 'block' }}\n          >\n            Add Label\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Label;\n","/Users/cocoball/Korello/src/components/modal/ChecklistModal.jsx",[],"/Users/cocoball/Korello/src/components/modal/Checklist.jsx",[],"/Users/cocoball/Korello/src/assets/colors.js",[],"/Users/cocoball/Korello/src/components/modal/ChecklistForm.jsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":17},{"ruleId":"115","severity":1,"message":"120","line":6,"column":11,"nodeType":"117","messageId":"118","endLine":6,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":25,"column":11,"nodeType":"123","endLine":28,"endColumn":13},{"ruleId":"115","severity":1,"message":"124","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":28,"column":6,"nodeType":"127","endLine":28,"endColumn":22,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":50,"column":19,"nodeType":"131","messageId":"132","endLine":50,"endColumn":21},{"ruleId":"125","severity":1,"message":"133","line":78,"column":6,"nodeType":"127","endLine":78,"endColumn":14,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"135","line":10,"column":22,"nodeType":"117","endLine":10,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":14,"column":17,"nodeType":"131","messageId":"132","endLine":14,"endColumn":19},{"ruleId":"115","severity":1,"message":"136","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":15},{"ruleId":"115","severity":1,"message":"137","line":5,"column":17,"nodeType":"117","messageId":"118","endLine":5,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":69,"column":16,"nodeType":"131","messageId":"132","endLine":69,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":96,"column":17,"nodeType":"131","messageId":"132","endLine":96,"endColumn":19},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LoginForm' is defined but never used.","'handler' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'memo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'method' and 'uri'. Either include them or remove the dependency array.","ArrayExpression",["140"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'uri'. Either include it or remove the dependency array.",["141"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [method, state1, state2, uri]",{"range":"146","text":"147"},"Update the dependencies array to be: [update, uri]",{"range":"148","text":"149"},[821,837],"[method, state1, state2, uri]",[2104,2112],"[update, uri]"]