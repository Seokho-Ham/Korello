{"version":3,"sources":["pages/LoginPage.jsx","api/index.js","components/board/BoardForm.jsx","components/board/NewBoardForm.jsx","components/board/BoardList.jsx","components/card/AddCardButton.jsx","assets/colors.js","components/modal/Label.jsx","components/modal/ChecklistModal.jsx","components/modal/ChecklistForm.jsx","components/modal/Checklist.jsx","components/modal/CalendarModal.jsx","components/card/CardModal.jsx","components/card/CardListForm.jsx","components/card/TagForm.jsx","components/card/AddTagButton.jsx","components/card/CardList.jsx","pages/BoardPage.jsx","App.js","index.js"],"names":["LoginPage","props","handler","id","style","textAlign","height","margin","href","src","width","serverUrl","useGetApi","method","uri","state1","state2","useState","data","setData","loading","setLoading","code","setCode","useEffect","a","axios","console","log","result_body","result_code","getData","usePostApi","body","post","useUpdateApi","url","put","BoardForm","setUpdate","postData","history","useHistory","deleteBoard","alert","prevState","className","onClick","push","slice","length","name","NewBoardForm","onClickHandler","display","boardName","setBoardName","inputRef","useRef","addBoard","p","current","focus","ref","placeholder","value","onChange","e","target","onKeyPress","key","BoardList","match","update","setDisplay","map","el","path","AddButton","tag","title","setTitle","addCardHandler","tagValue","type","colors","color","Label","modalUpdate","setModalUpdate","labels","openLabel","setOpenLabel","selectColor","setSelectColor","labelName","setLabelName","selectButton","handleDisplay","deleteLabel","addBoardLabelButton","checkOverlap","arr","result","addCardLabelButton","labelIds","labelId","overflow","colorlist","indexOf","i","undefined","backgroundColor","padding","cursor","borderRadius","float","newRenderColors","ChecklistModal","clicked","setClicked","checkListTitle","setCheckListTitle","addCheckList","cardId","ChecklistForm","updateData","delete","deleteData","newTitle","setNewTitle","changeButton","setChangebutton","checkboxHandler","changeChecklist","todoId","deleteCheckList","checked","status","Checklist","percent","clickButtonHandler","addChecklistHandler","CalendarModal","Date","CardModal","onClose","tabIndex","count","Math","round","progressCalculator","CardListForm","memberNames","useDrag","item","collect","monitor","isDragging","drag","edit","setEdit","cardTitle","setCardTitle","modalVisible","setModalVisible","clickModal","sendUpdate","deleteCard","opacity","sort","b","memo","TagForm","boardUrl","appendItem","useCallback","useDrop","accept","drop","hovered","isOver","AddCardButton","AddTagButton","tagName","setTagName","cardName","setCardName","addTag","CardList","location","tagList","setTagList","cardList","setCardList","get","obj","tags","cards","cardObj","createDate","updateDate","getCard","useGetCardApi","pathname","goBack","index","BoardPage","exact","component","App","logined","setLogined","loginHandler","DndProvider","backend","HTML5Backend","render","Board","from","to","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.2fa89a0d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport LoginForm from '../components/user/LoginForm';\n// import SigninForm from '../components/user/SigninForm';\n\nconst LoginPage = props => {\n  const { handler } = props;\n\n  // const onClickSignIn = () => {\n  //   setClicked('signin');\n  // };\n\n  return (\n    <>\n      {/* <button onClick={onClickSignIn}>SignIn</button> */}\n      <div\n        id='login'\n        style={{ textAlign: 'center', height: '1200px', margin: '20px' }}\n      >\n        {/* {clicked === 'login' ? <LoginForm handler={handler} /> : <SigninForm />} */}\n        {/* <LoginForm handler={handler} /> */}\n        <a\n          id='custom-login-btn'\n          href='http://hyuki.app/oauth2/authorization/kakao'\n        >\n          <img\n            src='//k.kakaocdn.net/14/dn/btqCn0WEmI3/nijroPfbpCa4at5EIsjyf0/o.jpg'\n            width='222'\n          />\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst serverUrl = 'http://222.117.225.28:8080/api/v1';\n\n//GET--------------------------------------------------------------------------------\nconst useGetApi = (method, uri, state1, state2) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState('loading');\n  const [code, setCode] = useState(0);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        let { data } = await axios[method](serverUrl + uri);\n        console.log('get요청');\n        console.log(typeof data);\n        if (data.result_body) {\n          setData(data.result_body);\n        }\n        setCode(data.result_code);\n        setLoading('finished');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getData();\n  }, [state1, state2]);\n  return [data, code, loading];\n};\n\nconst useGetCardApi = uri => {\n  const [update, setUpdate] = useState(false);\n  const [tagList, setTagList] = useState([]);\n  const [cardList, setCardList] = useState([]);\n\n  useEffect(() => {\n    const getCard = async () => {\n      let { data } = await axios.get(serverUrl + uri);\n      console.log('getCard 요청');\n      console.log(typeof data);\n      let { result_body } = data;\n\n      if (result_body.length > 0) {\n        const obj = {};\n        const tags = [];\n        const cards = [];\n        result_body\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            let cardObj = {\n              id: el.id,\n              name: el.name,\n              tagValue: el.tagValue,\n              memberNames: el.memberNames,\n              labels: el.labels,\n              createDate: el.createDate,\n              updateDate: el.updateDate,\n            };\n\n            if (!obj[el.tagValue]) {\n              obj[el.tagValue] = [cardObj];\n            } else {\n              obj[el.tagValue].push(cardObj);\n            }\n          });\n\n        for (let i in obj) {\n          tags.push(i);\n          cards.push(obj[i]);\n        }\n\n        setTagList(tags);\n        setCardList(cards);\n      }\n    };\n    getCard();\n  }, [update]);\n\n  return [tagList, cardList, setUpdate];\n};\n\n//POST--------------------------------------------------------------------------------\nconst usePostApi = () => {\n  const postData = async (uri, body) => {\n    try {\n      let { data } = await axios.post(serverUrl + uri, body);\n      console.log('post 요청');\n      console.log(typeof data);\n      return data.result_code;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [postData];\n};\n\n//UPDATE--------------------------------------------------------------------------------\nconst useUpdateApi = () => {\n  const updateData = async (url, body) => {\n    try {\n      const { data } = await axios.put(serverUrl + url, body);\n      console.log('update 요청');\n      console.log(typeof data);\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return [updateData];\n};\n\n//DELETE-------------------------------------------------------------------------------\nconst useDeleteApi = () => {\n  const deleteData = async url => {\n    try {\n      const { data } = await axios.delete(serverUrl + url);\n      console.log('delete 요청');\n      console.log(data);\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return [deleteData];\n};\n\nexport { useGetApi, useGetCardApi, usePostApi, useUpdateApi, useDeleteApi };\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { usePostApi } from '../../api/index';\n\nconst BoardForm = ({ url, data, setUpdate }) => {\n  const [postData] = usePostApi();\n  const history = useHistory();\n\n  const clickBoard = () => {\n    history.push(`${url.slice(0, url.length - 1)}/${data.id}/cards`, {\n      id: data.id,\n    });\n  };\n  const deleteBoard = async () => {\n    const code = await postData('/board/delete', { id: data.id });\n    if (code !== 200) {\n      alert('삭제 실패!');\n    }\n    setUpdate(prevState => !prevState);\n  };\n  return (\n    <div className='board-element'>\n      <button className='board-delete-button' onClick={deleteBoard}>\n        X\n      </button>\n\n      <div className='board-title' onClick={clickBoard}>\n        <>{data.name}</>\n      </div>\n    </div>\n  );\n};\n\nexport default BoardForm;\n","import React, { useState, useRef } from 'react';\nimport { usePostApi } from '../../api/index';\n\nconst NewBoardForm = ({ onClickHandler, setUpdate, display }) => {\n  const [boardName, setBoardName] = useState('');\n  const inputRef = useRef(null);\n  const [postData] = usePostApi();\n\n  const onChangeHandler = e => {\n    setBoardName(e.target.value);\n  };\n\n  const keyHandler = e => {\n    if (e.key === 'Enter') {\n      addBoard();\n    }\n  };\n  const addBoard = async () => {\n    if (boardName.length > 0) {\n      const code = await postData('/board', {\n        name: boardName,\n      });\n      console.log(code);\n      if (code === 201) {\n        setBoardName('');\n        onClickHandler();\n        setUpdate(p => !p);\n      } else {\n        alert('생성에 실패했습니다.');\n        setBoardName('');\n        inputRef.current.focus();\n      }\n    } else {\n      alert('이름을 입력해주세요.');\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <span\n      className='add-board-form'\n      style={{ display: display ? 'block' : 'none' }}\n    >\n      <input\n        ref={inputRef}\n        placeholder='board name'\n        value={boardName}\n        onChange={onChangeHandler}\n        onKeyPress={keyHandler}\n      />\n      <button onClick={addBoard}>Add</button>\n      <button onClick={onClickHandler}>Cancel</button>\n    </span>\n  );\n};\n\nexport default NewBoardForm;\n","import React, { useState } from 'react';\nimport { useGetApi } from '../../api/index';\nimport BoardForm from './BoardForm';\nimport NewBoardForm from './NewBoardForm';\n\nconst BoardList = ({ match }) => {\n  const [update, setUpdate] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [data] = useGetApi('get', '/boards', update);\n\n  const onClickHandler = () => {\n    setDisplay(p => !p);\n  };\n\n  const renderBoards = () => {\n    return data.map(el => {\n      return (\n        <BoardForm\n          key={el.id}\n          url={match.path}\n          data={el}\n          setUpdate={setUpdate}\n        />\n      );\n    });\n  };\n  return (\n    <div id='board-container'>\n      {data.length > 0 ? (\n        <>\n          <div id='board-list'>{renderBoards()}</div>\n        </>\n      ) : (\n        <div id='board-list'>데이터가 없습니다.</div>\n      )}\n      <span id='board-add-button'>\n        <NewBoardForm\n          onClickHandler={onClickHandler}\n          setUpdate={setUpdate}\n          display={display}\n        />\n        <button\n          onClick={onClickHandler}\n          style={{ display: display ? 'none' : 'block' }}\n        >\n          Add Board\n        </button>\n      </span>\n    </div>\n  );\n};\n\nexport default BoardList;\n","import React, { useState } from 'react';\nimport { usePostApi } from '../../api/index';\n\nconst AddButton = ({ tag, url, setUpdate }) => {\n  const [title, setTitle] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [postData] = usePostApi();\n\n  const onChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n\n  const onClickHandler = () => {\n    setDisplay(prevState => !prevState);\n  };\n\n  const addCardHandler = async () => {\n    if (title.length > 0) {\n      const code = await postData(`${url.slice(0, url.length - 1)}`, {\n        tagValue: tag,\n        name: title,\n      });\n\n      if (code === 201) {\n        setTitle('');\n        setDisplay(prevState => !prevState);\n        setUpdate(prevState => !prevState);\n      } else {\n        alert('생성에 실패했습니다.');\n        setTitle('');\n      }\n    } else {\n      alert('이름을 입력해주세요.');\n    }\n  };\n\n  return (\n    <>\n      <div\n        className='new-card-form'\n        style={{ display: display ? 'block' : 'none' }}\n      >\n        <input\n          name='title'\n          type='text'\n          placeholder='title'\n          value={title}\n          onChange={onChangeHandler}\n        ></input>\n        <div className='add-button'>\n          <button onClick={addCardHandler}>Add Card</button>\n          <button onClick={onClickHandler}>Cancel</button>\n        </div>\n      </div>\n      <div\n        className='add-button'\n        style={{ display: display ? 'none' : 'block' }}\n      >\n        <button onClick={onClickHandler}>Add another card</button>\n      </div>\n    </>\n  );\n};\n\nexport default AddButton;\n","const colors = [\n  { name: 'green', color: '#80E12A' },\n  { name: 'red', color: '#CD1F48' },\n  { name: 'yellow', color: '#FFDC3C' },\n  { name: 'pink', color: '#FF98FE' },\n  { name: 'purple', color: '#960a96' },\n  { name: 'orange', color: '#E56D29' },\n  { name: 'blue', color: '#0A6EFF' },\n];\n\nexport default colors;\n","import React, { useState } from 'react';\nimport { usePostApi, useGetApi } from '../../api/index';\nimport colors from '../../assets/colors';\n\nconst Label = ({ id, url, modalUpdate, setModalUpdate, setUpdate, labels }) => {\n  const [openLabel, setOpenLabel] = useState(false);\n  const [selectColor, setSelectColor] = useState('');\n  const [labelName, setLabelName] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [postData] = usePostApi();\n  const [data] = useGetApi(\n    'get',\n    url.slice(0, url.length - 6) + '/label',\n    modalUpdate,\n  );\n\n  const onChangeHandler = e => {\n    setLabelName(e.target.value);\n  };\n  const openLabelButton = () => {\n    setOpenLabel(p => !p);\n  };\n  const selectButton = e => {\n    setSelectColor(e.target.className);\n  };\n  const handleDisplay = () => {\n    setDisplay(p => !p);\n  };\n\n  const deleteLabel = async e => {\n    // console.log(e.target.name);\n    // console.log(url);\n    // const code = await postData(\n    //   url.slice(0, url.length - 6) + '/label/delete',\n    //   {\n    //     labelsIds: e.target.name,\n    //   },\n    // );\n    // if (code === 200) {\n    //   setSelectColor('');\n    //   setLabelName('');\n    // } else {\n    //   alert('삭제 실패');\n    // }\n  };\n\n  const addBoardLabelButton = async () => {\n    if (labelName.length > 0 && selectColor.length > 0) {\n      const code = await postData(url.slice(0, url.length - 6) + '/label', {\n        name: labelName,\n        color: selectColor,\n      });\n\n      if (code === 201) {\n        setSelectColor('');\n        setLabelName('');\n        setDisplay(p => !p);\n        setModalUpdate(p => !p);\n      } else {\n        alert('추가 실패');\n      }\n    } else {\n      alert('이름과 색을 정해주세요!');\n    }\n  };\n\n  const checkOverlap = (arr, id) => {\n    let result = false;\n    arr.map(el => {\n      if (el.id === id) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  const addCardLabelButton = async e => {\n    const code = checkOverlap(labels, e.target.id)\n      ? await postData(`/card/${id}/label/delete`, {\n          labelIds: [e.target.id],\n        })\n      : await postData(`/card/${id}/label`, {\n          labelId: e.target.id,\n        });\n\n    if (code === 201 || code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  const newRenderColors = () => {\n    let colorlist = {};\n    data.map(el => {\n      colorlist[el.color] = data.indexOf(el);\n    });\n\n    return colors.map((el, i) => {\n      if (colorlist[el.color] !== undefined) {\n        let value = data[colorlist[el.color]];\n\n        return (\n          <div\n            key={i}\n            style={{\n              display: 'flex',\n            }}\n          >\n            <span\n              // key={i}\n              id={value.id}\n              className={value.color}\n              style={{\n                backgroundColor: value.color,\n                color: '#fff',\n                display: 'block',\n                // float: 'left',\n                margin: '2px',\n                width: '160px',\n                height: '20px',\n                padding: '3px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={addCardLabelButton}\n            >\n              {value.name}\n            </span>\n            <button\n              name={value.id}\n              onClick={deleteLabel}\n              style={{ float: 'right' }}\n            >\n              X\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} style={{ display: 'flex' }}>\n            <span\n              // key={i}\n              className={el.color}\n              style={{\n                backgroundColor: el.color,\n                color: '#fff',\n                display: 'inline-block',\n                margin: '1px',\n                padding: '3px',\n                width: '160px',\n                height: '20px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={selectButton}\n            ></span>\n          </div>\n        );\n      }\n    });\n  };\n  return (\n    <div className='add-card-label-button'>\n      <button onClick={openLabelButton}>Label</button>\n      {openLabel ? (\n        <div className='label-modal' style={{ overflow: 'auto' }}>\n          {newRenderColors()}\n          <div\n            className='label-form'\n            style={{ display: display ? 'block' : 'none' }}\n          >\n            <input\n              value={labelName}\n              onChange={onChangeHandler}\n              style={{\n                backgroundColor: selectColor,\n                width: '160px',\n                borderRadius: '3px',\n                color: selectColor === '' ? 'black' : '#fff',\n              }}\n              placeholder='title'\n            />\n            <button onClick={addBoardLabelButton}>Add Label</button>\n            <button onClick={handleDisplay}>Cancel</button>\n          </div>\n\n          <button\n            onClick={handleDisplay}\n            style={{ display: display ? 'none' : 'block' }}\n          >\n            Add Label\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { usePostApi } from '../../api';\n\nconst ChecklistModal = ({ id, setUpdate }) => {\n  const [clicked, setClicked] = useState(false);\n  const [checkListTitle, setCheckListTitle] = useState('');\n  const [postData] = usePostApi();\n\n  const clickButton = () => {\n    setClicked(p => !p);\n  };\n  const onChangeHandler = e => {\n    setCheckListTitle(e.target.value);\n  };\n  const addCheckList = async () => {\n    if (checkListTitle.length > 0) {\n      const code = await postData(`/card/${id}/todo`, {\n        cardId: id,\n        title: checkListTitle,\n      });\n      if (code === 201 || code === 200) {\n        setUpdate(p => !p);\n        setCheckListTitle('');\n        setClicked(p => !p);\n      } else {\n        alert('체크리스트 생성 실패');\n        setUpdate(p => !p);\n      }\n    } else {\n      alert('title을 입력해주세요.');\n    }\n  };\n\n  return (\n    <div className='add-checklist-modal'>\n      <button onClick={clickButton}>CheckList</button>\n      {clicked ? (\n        <div className='checkList-modal' style={{ overflow: 'auto' }}>\n          <input\n            placeholder='checklist title'\n            value={checkListTitle}\n            onChange={onChangeHandler}\n            style={{ display: 'block' }}\n          />\n          <button onClick={addCheckList}>Add Checklist</button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChecklistModal;\n","import React, { useState } from 'react';\nimport { useUpdateApi, useDeleteApi } from '../../api/index';\n\nconst ChecklistForm = ({ el, setUpdate }) => {\n  const [updateData] = useUpdateApi();\n  const [deleteData] = useDeleteApi();\n  const [newTitle, setNewTitle] = useState(el.title);\n  const [changeButton, setChangebutton] = useState(false);\n  const onChangeTitle = e => {\n    setNewTitle(e.target.value);\n  };\n  const checkboxHandler = async e => {\n    const code = await updateData(`/todo/${e.target.name}/status`);\n    if (code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n  const changeChecklist = async () => {\n    if (changeButton) {\n      if (newTitle.length > 0 && newTitle !== el.title) {\n        const code = await updateData(`/todo/${el.todoId}`, {\n          title: newTitle,\n        });\n\n        if (code === 200) {\n          setChangebutton(false);\n          setUpdate(p => !p);\n        } else {\n          alert('실패');\n          setUpdate(p => !p);\n        }\n      } else {\n        setChangebutton(p => !p);\n      }\n    } else {\n      setChangebutton(p => !p);\n    }\n  };\n  const deleteCheckList = async () => {\n    const code = await deleteData(`/todo/${el.todoId}`);\n    if (code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  return (\n    <div className='checklist-item'>\n      <>\n        <input\n          type='checkbox'\n          name={el.todoId}\n          checked={el.status}\n          onChange={checkboxHandler}\n        />\n        {changeButton ? (\n          <span className='checklist-item-title'>\n            <input value={newTitle} onChange={onChangeTitle} />\n            <button onClick={changeChecklist}>수정</button>\n          </span>\n        ) : (\n          <span className='checklist-item-title' onClick={changeChecklist}>\n            {el.title}\n          </span>\n        )}\n        <button className='checklist-delete' onClick={deleteCheckList}>\n          X\n        </button>\n      </>\n    </div>\n  );\n};\n\nexport default ChecklistForm;\n","import React, { useState } from 'react';\nimport { usePostApi } from '../../api';\nimport ChecklistForm from './ChecklistForm';\n\nconst Checklist = ({ id, data, setUpdate, percent }) => {\n  const [clicked, setClicked] = useState(false);\n  const [title, setTitle] = useState('');\n  const [postData] = usePostApi();\n  const clickButtonHandler = () => {\n    setClicked(p => !p);\n  };\n  const addChecklistHandler = async () => {\n    if (title.length > 0) {\n      const code = await postData(`/card/${id}/todo`, {\n        cardId: id,\n        title: title,\n      });\n      if (code === 201 || code === 200) {\n        setTitle('');\n        setClicked(p => !p);\n        setUpdate(p => !p);\n      } else {\n        alert('생성 실패!');\n      }\n    } else {\n      alert('title을 입력해주세요');\n    }\n  };\n  const onChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n  return (\n    <>\n      <div className='checklist-header'>\n        <h4 style={{ margin: '0px 0px 5px 0px' }}>CheckList</h4>\n        <div className='progress-container'>\n          <div className='progress-percent'>{percent}%</div>\n          <div className='progress-bar'>\n            <div\n              className='progress-percent-bar'\n              style={{\n                width: `${percent}%`,\n              }}\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div className='checklist- inner'>\n        {data.map((el, i) => (\n          <ChecklistForm key={i} el={el} setUpdate={setUpdate} />\n        ))}\n      </div>\n      <div className='checklist-add-button'>\n        {clicked ? (\n          <>\n            <input\n              placeholder='title'\n              value={title}\n              onChange={onChangeHandler}\n            ></input>\n            <button onClick={addChecklistHandler}>Add</button>\n            <button onClick={clickButtonHandler}>Cancel</button>\n          </>\n        ) : (\n          <button onClick={clickButtonHandler}>Add an item</button>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Checklist;\n","import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n\nconst CalendarModal = () => {\n  const [value, onChange] = useState(new Date());\n  return <div>{/* <Calendar onChange={onChange} value={value} /> */}</div>;\n};\n\nexport default CalendarModal;\n","import React, { useState } from 'react';\nimport Label from '../modal/Label';\nimport CheckListModal from '../modal/ChecklistModal';\nimport Checklist from '../modal/Checklist';\nimport CalendarModal from '../modal/CalendarModal';\nimport { useGetApi } from '../../api';\n\nconst CardModal = ({ onClose, id, title, tag, url, setUpdate, labels }) => {\n  const [modalUpdate, setModalUpdate] = useState(false);\n  const [data] = useGetApi('get', `/card/${id}/todo`, modalUpdate);\n\n  const progressCalculator = data => {\n    let count = 0;\n    data.map(el => {\n      if (el.status) {\n        count++;\n      }\n    });\n    const result = Math.round((count / data.length) * 100);\n    return result;\n  };\n\n  return (\n    <>\n      <div className='modal-container' />\n      <div className='modal-wrapper'>\n        <div tabIndex='0' className='modal-inner'>\n          <button className='modal-close' onClick={onClose}>\n            X\n          </button>\n          <div className='modal-header'>\n            <div className='modal-labels'>\n              {labels.length > 0\n                ? labels.map((el, i) => (\n                    <span\n                      key={i}\n                      className='label'\n                      style={{\n                        backgroundColor: el.color,\n                      }}\n                    >\n                      {el.name}\n                    </span>\n                  ))\n                : null}\n            </div>\n            <h2>{title}</h2>\n          </div>\n          <div className='modal-contents'>\n            {data.length > 0 ? (\n              <div className='checklist-container'>\n                <Checklist\n                  id={id}\n                  data={data}\n                  setUpdate={setModalUpdate}\n                  percent={progressCalculator(data)}\n                />\n              </div>\n            ) : null}\n          </div>\n          <div className='modal-sidebar'>\n            <Label\n              url={url}\n              id={id}\n              modalUpdate={modalUpdate}\n              setModalUpdate={setModalUpdate}\n              setUpdate={setUpdate}\n              labels={labels}\n            />\n            <CheckListModal id={id} setUpdate={setModalUpdate} />\n            <CalendarModal />\n            <div>CheckList, Duedate, Calendar</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CardModal;\n","import React, { memo, useState } from 'react';\nimport { usePostApi, useUpdateApi } from '../../api/index';\nimport { useDrag } from 'react-dnd';\nimport CardModal from './CardModal';\n\nconst CardListForm = ({\n  id,\n  title,\n  tag,\n  memberNames,\n  labels,\n  url,\n  setUpdate,\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'card', id: id, tagValue: tag },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const [edit, setEdit] = useState(false);\n  const [cardTitle, setCardTitle] = useState(title);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [postData] = usePostApi();\n  const [updateData] = useUpdateApi();\n\n  const editCard = () => {\n    setEdit(p => !p);\n  };\n  const inputHandler = e => {\n    setCardTitle(e.target.value);\n  };\n\n  const clickModal = () => {\n    setModalVisible(p => !p);\n  };\n\n  const sendUpdate = async () => {\n    if (cardTitle !== title) {\n      let code = await updateData(url.slice(0, url.length - 1) + '/name', {\n        id: id,\n        name: cardTitle,\n      });\n      if (code === 200) {\n        setEdit(p => !p);\n        setUpdate(prevState => !prevState);\n      } else {\n        alert('update 실패');\n      }\n    } else {\n      setEdit(p => !p);\n    }\n  };\n\n  const deleteCard = async () => {\n    console.log(id);\n    let result_code = await postData(url.slice(0, url.length - 1) + '/delete', {\n      id: id,\n    });\n    if (result_code === 201) {\n      setUpdate(prevState => !prevState);\n    } else {\n      alert('삭제에 실패하였습니다.');\n      setUpdate(prevState => !prevState);\n    }\n  };\n\n  return (\n    <>\n      {modalVisible ? (\n        <CardModal\n          onClose={clickModal}\n          id={id}\n          title={title}\n          tag={tag}\n          url={url}\n          setUpdate={setUpdate}\n          labels={labels}\n        />\n      ) : null}\n      <div\n        className='card'\n        opacity={isDragging ? 0.5 : 1}\n        ref={edit ? null : drag}\n      >\n        {labels.length > 0 ? (\n          <div className='card-labels'>\n            {labels\n              .sort((a, b) => a.id - b.id)\n              .map((el, i) => (\n                <span\n                  key={i}\n                  className='label'\n                  style={{\n                    backgroundColor: el.color,\n                  }}\n                ></span>\n              ))}\n          </div>\n        ) : null}\n        {edit ? (\n          <div className='card-input'>\n            <input value={cardTitle} onChange={inputHandler} />\n            <button onClick={sendUpdate}>save</button>\n          </div>\n        ) : (\n          <div onClick={editCard}>{title}</div>\n        )}\n        {edit ? null : (\n          <div className='card-buttons'>\n            <button className='modal' onClick={clickModal}>\n              modal\n            </button>\n            <button className='card-delete-button' onClick={deleteCard}>\n              X\n            </button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(CardListForm);\n","import React, { useState, memo, useCallback } from 'react';\nimport AddCardButton from './AddCardButton';\nimport CardListForm from './CardListForm';\nimport { useUpdateApi } from '../../api/index';\nimport { useDrop } from 'react-dnd';\n\nconst TagForm = ({ data, tag, boardUrl, setUpdate }) => {\n  const [updateData] = useUpdateApi();\n\n  const appendItem = useCallback(async item => {\n    if (item.tagValue !== tag) {\n      const code = await updateData(\n        boardUrl.slice(0, boardUrl.length - 1) + '/tag',\n        {\n          id: item.id,\n          tagValue: tag,\n        },\n      );\n      if (code === 200) {\n        setUpdate(p => !p);\n      } else {\n        alert('이동 실패');\n      }\n    }\n  });\n\n  const [{ hovered }, drop] = useDrop({\n    accept: 'card',\n    drop: appendItem,\n    collect: monitor => {\n      return {\n        hovered: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <div className='tag'>\n      <div className='tag-header'>{tag}</div>\n      <div\n        className={`drop-area ${hovered ? 'drop-area-hovered' : ''}`}\n        ref={drop}\n      >\n        {console.log(data)}\n        {data\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            return (\n              <CardListForm\n                key={el.id}\n                id={el.id}\n                title={el.name}\n                memberNames={el.memberNames}\n                labels={el.labels}\n                tag={tag}\n                url={boardUrl}\n                setUpdate={setUpdate}\n              />\n            );\n          })}\n      </div>\n      <AddCardButton tag={tag} url={boardUrl} setUpdate={setUpdate} />\n    </div>\n  );\n};\n\nexport default memo(TagForm);\n","import React, { useState } from 'react';\nimport { usePostApi } from '../../api/index';\n\nconst AddTagButton = ({ url, setUpdate }) => {\n  const [tagName, setTagName] = useState('');\n  const [cardName, setCardName] = useState('');\n  const [clicked, setClicked] = useState(false);\n  const [postData] = usePostApi();\n\n  const onClickHandler = () => {\n    setTagName('');\n    setCardName('');\n    setClicked(prevState => !prevState);\n  };\n  const onChangeHandler = e => {\n    setTagName(e.target.value);\n  };\n  const onCardChangeHandler = e => {\n    setCardName(e.target.value);\n  };\n\n  const addTag = async () => {\n    if (tagName.length === 0 && cardName.length === 0) {\n      alert('빈칸이 있습니다.');\n    } else {\n      const code = await postData(`${url.slice(0, url.length - 1)}`, {\n        tagValue: tagName,\n        name: cardName,\n      });\n      if (code === 201) {\n        setTagName('');\n        setCardName('');\n        setUpdate(prevState => !prevState);\n        setClicked(prevState => !prevState);\n      } else {\n        alert('생성에 실패했습니다.');\n        setTagName('');\n      }\n    }\n  };\n\n  return (\n    <>\n      <div\n        className='tag-add-button'\n        style={{ display: clicked ? 'inline-block' : 'none' }}\n      >\n        <input\n          placeholder='tag name'\n          value={tagName}\n          onChange={onChangeHandler}\n        />\n        <input\n          placeholder='card name'\n          value={cardName}\n          onChange={onCardChangeHandler}\n        />\n        <button onClick={addTag}>Add</button>\n        <button onClick={onClickHandler}>Cancel</button>\n      </div>\n      <div\n        className='tag-add-button'\n        style={{ display: clicked ? 'none' : 'inline-block' }}\n      >\n        <button onClick={onClickHandler}>Add Tag</button>\n      </div>\n    </>\n  );\n};\n\nexport default AddTagButton;\n","import React from 'react';\nimport TagForm from './TagForm';\nimport { useGetCardApi } from '../../api/index';\nimport AddTagButton from './AddTagButton';\n\nconst CardList = ({ history, location }) => {\n  const [tagList, cardList, setUpdate] = useGetCardApi(`${location.pathname}`);\n\n  const onClickHandler = () => {\n    history.goBack();\n  };\n\n  return (\n    <div id='one-board'>\n      <button className='go-back' onClick={onClickHandler}>\n        뒤로가기\n      </button>\n      <AddTagButton url={location.pathname} setUpdate={setUpdate} />\n      {cardList.length > 0 ? (\n        <div id='tag-all-list'>\n          {cardList.map((el, i) => {\n            let index = cardList.indexOf(el);\n            return (\n              <TagForm\n                key={i}\n                data={el}\n                tag={tagList[index]}\n                boardUrl={location.pathname}\n                setUpdate={setUpdate}\n              />\n            );\n          })}\n        </div>\n      ) : (\n        <div id='tag-all-list'></div>\n      )}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport BoardList from '../components/board/BoardList';\nimport CardList from '../components/card/CardList';\n\nconst BoardPage = ({ match, history }) => {\n  return (\n    <Router>\n      <Route exact path={match.path} component={BoardList} />\n      <Route\n        path={`${match.path.slice(0, match.path.length - 1)}/:id/cards`}\n        component={CardList}\n      />\n    </Router>\n  );\n};\n\nexport default BoardPage;\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Login from './pages/LoginPage.jsx';\nimport Board from './pages/BoardPage.jsx';\n\nconst App = () => {\n  const [logined, setLogined] = useState(false);\n  const loginHandler = () => {\n    setLogined(!logined);\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Router>\n        <div id='header'>\n          <h2 id='header-title'>Korello</h2>\n        </div>\n\n        <Route exact path='/' render={() => <Login handler={loginHandler} />} />\n        {/* <Redirect from='/' to='/boards' /> */}\n        <Switch>\n          <Route path='/boards' component={Board} />\n          <Redirect from='/board/:id/cards' to='/boards' />\n        </Switch>\n      </Router>\n    </DndProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/main.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}