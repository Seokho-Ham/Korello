{"version":3,"sources":["api/index.js","pages/LoginPage.jsx","components/Nav.jsx","components/board/BoardForm.jsx","components/board/NewBoardForm.jsx","components/board/BoardList.jsx","components/card/AddCardButton.jsx","assets/colors.js","components/modal/Label.jsx","components/modal/ChecklistModal.jsx","components/modal/ChecklistForm.jsx","components/modal/Checklist.jsx","components/modal/CalendarModal.jsx","components/card/CardModal.jsx","components/card/CardListForm.jsx","components/card/TagForm.jsx","components/card/AddTagButton.jsx","components/card/CardList.jsx","pages/BoardPage.jsx","pages/NotFound.jsx","App.js","index.js"],"names":["serverUrl","accessToken","setAccessToken","token","axios","defaults","headers","common","useGetApi","method","uri","state1","state2","useState","data","setData","loading","setLoading","code","setCode","useEffect","a","result_body","result_code","console","log","getData","usePostApi","body","post","useUpdateApi","url","put","LoginPage","refreshToken","setLogin","queryString","parse","window","location","search","to","className","placeholder","type","value","onClick","alert","style","marginBottom","fontFamily","id","href","src","width","Nav","BoardForm","setUpdate","postData","history","useHistory","deleteBoard","prevState","push","slice","length","name","NewBoardForm","onClickHandler","display","boardName","setBoardName","inputRef","useRef","addBoard","p","current","focus","ref","onChange","e","target","onKeyPress","key","BoardList","match","update","setDisplay","map","el","path","AddButton","tag","title","setTitle","addCardHandler","tagValue","colors","color","Label","modalUpdate","setModalUpdate","labels","openLabel","setOpenLabel","selectColor","setSelectColor","labelName","setLabelName","selectButton","handleDisplay","deleteLabel","addBoardLabelButton","checkOverlap","arr","result","addCardLabelButton","labelIds","labelId","overflow","colorlist","indexOf","i","undefined","backgroundColor","margin","height","padding","cursor","borderRadius","float","newRenderColors","ChecklistModal","clicked","setClicked","checkListTitle","setCheckListTitle","addCheckList","cardId","ChecklistForm","updateData","delete","deleteData","newTitle","setNewTitle","changeButton","setChangebutton","checkboxHandler","changeChecklist","todoId","deleteCheckList","checked","status","Checklist","percent","clickButtonHandler","addChecklistHandler","CalendarModal","Date","CardModal","onClose","tabIndex","count","Math","round","progressCalculator","CardListForm","memberNames","useDrag","item","collect","monitor","isDragging","drag","edit","setEdit","cardTitle","setCardTitle","modalVisible","setModalVisible","clickModal","sendUpdate","deleteCard","opacity","sort","b","memo","TagForm","boardUrl","appendItem","useCallback","useDrop","accept","drop","hovered","isOver","AddCardButton","AddTagButton","tagName","setTagName","cardName","setCardName","addTag","CardList","tagList","setTagList","cardList","setCardList","get","obj","tags","cards","cardObj","createDate","updateDate","getCard","useGetCardApi","pathname","goBack","index","BoardPage","component","NotFound","App","onSilentRefresh","DndProvider","backend","HTML5Backend","exact","render","Board","from","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.973c8051.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst serverUrl = 'http://222.117.225.28:8080/api/v1';\nlet accessToken = '';\nconst setAccessToken = token => {\n  accessToken = token;\n};\n\naxios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n//GET--------------------------------------------------------------------------------\nconst useGetApi = (method, uri, state1, state2) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState('loading');\n  const [code, setCode] = useState(0);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        let { data } = await axios[method](serverUrl + uri);\n\n        if (data.result_body) {\n          setData(data.result_body);\n        }\n        setCode(data.result_code);\n        setLoading('finished');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getData();\n  }, [state1, state2]);\n  return [data, code, loading];\n};\n\nconst useGetCardApi = uri => {\n  const [update, setUpdate] = useState(false);\n  const [tagList, setTagList] = useState([]);\n  const [cardList, setCardList] = useState([]);\n\n  useEffect(() => {\n    const getCard = async () => {\n      let { data } = await axios.get(serverUrl + uri);\n\n      let { result_body } = data;\n\n      if (result_body.length > 0) {\n        const obj = {};\n        const tags = [];\n        const cards = [];\n        result_body\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            let cardObj = {\n              id: el.id,\n              name: el.name,\n              tagValue: el.tagValue,\n              memberNames: el.memberNames,\n              labels: el.labels,\n              createDate: el.createDate,\n              updateDate: el.updateDate,\n            };\n\n            if (!obj[el.tagValue]) {\n              obj[el.tagValue] = [cardObj];\n            } else {\n              obj[el.tagValue].push(cardObj);\n            }\n          });\n\n        for (let i in obj) {\n          tags.push(i);\n          cards.push(obj[i]);\n        }\n\n        setTagList(tags);\n        setCardList(cards);\n      } else {\n        setTagList([]);\n        setCardList([]);\n      }\n    };\n    getCard();\n  }, [update]);\n\n  return [tagList, cardList, setUpdate];\n};\n\n//POST--------------------------------------------------------------------------------\nconst usePostApi = () => {\n  const postData = async (uri, body) => {\n    try {\n      let { data } = await axios.post(serverUrl + uri, body);\n\n      return data.result_code;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [postData];\n};\n\n//UPDATE--------------------------------------------------------------------------------\nconst useUpdateApi = () => {\n  const updateData = async (url, body) => {\n    try {\n      const { data } = await axios.put(serverUrl + url, body);\n\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return [updateData];\n};\n\n//DELETE-------------------------------------------------------------------------------\nconst useDeleteApi = () => {\n  const deleteData = async url => {\n    try {\n      const { data } = await axios.delete(serverUrl + url);\n\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return [deleteData];\n};\n\nexport {\n  useGetApi,\n  useGetCardApi,\n  usePostApi,\n  useUpdateApi,\n  useDeleteApi,\n  setAccessToken,\n};\n","import React, { useEffect } from 'react';\nimport queryString from 'query-string';\nimport { setAccessToken } from '../api/index';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginPage = ({ refreshToken, setLogin }) => {\n  if (queryString.parse(window.location.search).accessToken) {\n    setAccessToken(queryString.parse(window.location.search).accessToken);\n    refreshToken(queryString.parse(window.location.search).refreshToken);\n  }\n\n  return queryString.parse(window.location.search).accessToken ? (\n    <Redirect to='/boards' />\n  ) : (\n    <div className='login-page'>\n      <div className='login-header'>\n        <span className='login-title'></span>\n        <span className='login-name'></span>\n      </div>\n      <div className='login-container'>\n        <div className='login-input'>\n          <input className='email' placeholder='email'></input>\n          <input className='password' placeholder='password'></input>\n          <input\n            className='submit'\n            type='submit'\n            value='Login'\n            onClick={() => {\n              alert('카카오로 로그인해주세요.');\n            }}\n          ></input>\n        </div>\n        <div style={{ marginBottom: '15px', fontFamily: '-apple-system' }}>\n          or\n        </div>\n        <a\n          id='custom-login-btn'\n          href='http://hyuki.app/oauth2/authorization/kakao'\n        >\n          <img\n            src='//k.kakaocdn.net/14/dn/btqCn0WEmI3/nijroPfbpCa4at5EIsjyf0/o.jpg'\n            width='222'\n          />\n        </a>\n        <hr />\n        <h3>저희 앱은 카카오 로그인으로만 로그인이 가능합니다:)</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\n\nconst Nav = () => {\n  const onClickHandler = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <div id='header'>\n      <div className='title'>\n        <a href='/boards'>\n          <span className='title-image'></span>\n          <span className='title-name'></span>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { usePostApi } from '../../api/index';\n\nconst BoardForm = ({ url, data, setUpdate }) => {\n  const [postData] = usePostApi();\n  const history = useHistory();\n\n  const clickBoard = () => {\n    history.push(`${url.slice(0, url.length - 1)}/${data.id}/cards`, {\n      id: data.id,\n    });\n  };\n  const deleteBoard = async () => {\n    const code = await postData('/board/delete', { id: data.id });\n    if (code !== 200) {\n      alert('삭제 실패!');\n    }\n    setUpdate(prevState => !prevState);\n  };\n  return (\n    <div className='board-element'>\n      <span className='board-delete-button' onClick={deleteBoard}></span>\n      <div className='board-el' onClick={clickBoard}>\n        <div className='board-title'>\n          <p>{data.name}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BoardForm;\n","import React, { useState, useRef } from 'react';\nimport { usePostApi } from '../../api/index';\n\nconst NewBoardForm = ({ onClickHandler, setUpdate, display }) => {\n  const [boardName, setBoardName] = useState('');\n  const inputRef = useRef(null);\n  const [postData] = usePostApi();\n\n  const onChangeHandler = e => {\n    setBoardName(e.target.value);\n  };\n\n  const keyHandler = e => {\n    if (e.key === 'Enter') {\n      addBoard();\n    }\n  };\n  const addBoard = async () => {\n    if (boardName.length > 0) {\n      const code = await postData('/board', {\n        name: boardName,\n      });\n      console.log(code);\n      if (code === 201) {\n        setBoardName('');\n        onClickHandler();\n        setUpdate(p => !p);\n      } else {\n        alert('생성에 실패했습니다.');\n        setBoardName('');\n        inputRef.current.focus();\n      }\n    } else {\n      alert('이름을 입력해주세요.');\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <span\n      className='add-board-form'\n      style={{ display: display ? 'block' : 'none' }}\n    >\n      <input\n        ref={inputRef}\n        placeholder='board name'\n        value={boardName}\n        onChange={onChangeHandler}\n        onKeyPress={keyHandler}\n      />\n      <button onClick={addBoard}>Add</button>\n      <button onClick={onClickHandler}>Cancel</button>\n    </span>\n  );\n};\n\nexport default NewBoardForm;\n","import React, { useState } from 'react';\nimport { useGetApi } from '../../api/index';\nimport BoardForm from './BoardForm';\nimport NewBoardForm from './NewBoardForm';\n\nconst BoardList = ({ match }) => {\n  const [update, setUpdate] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [data] = useGetApi('get', '/boards', update);\n\n  const onClickHandler = () => {\n    setDisplay(p => !p);\n  };\n\n  const renderBoards = () => {\n    return data.map(el => {\n      return (\n        <BoardForm\n          key={el.id}\n          url={match.path}\n          data={el}\n          setUpdate={setUpdate}\n        />\n      );\n    });\n  };\n  return (\n    <div id='board-container'>\n      <div id='board-header'>\n        <div id='board-header-items'>\n          <h2>Board Lists</h2>\n          <div id='board-button'>\n            <span id='board-add-button'>\n              <NewBoardForm\n                onClickHandler={onClickHandler}\n                setUpdate={setUpdate}\n                display={display}\n              />\n              <button\n                onClick={onClickHandler}\n                style={{ display: display ? 'none' : 'block' }}\n              >\n                Add Board\n              </button>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div id='board-list-container'>\n        {data.length > 0 ? (\n          <>\n            <div id='board-list'>{renderBoards()}</div>\n          </>\n        ) : (\n          <div id='board-list'>데이터가 없습니다.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BoardList;\n","import React, { useState } from 'react';\nimport { usePostApi } from '../../api/index';\n\nconst AddButton = ({ tag, url, setUpdate }) => {\n  const [title, setTitle] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [postData] = usePostApi();\n\n  const onChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n\n  const onClickHandler = () => {\n    setDisplay(prevState => !prevState);\n  };\n\n  const addCardHandler = async () => {\n    if (title.length > 0) {\n      const code = await postData(`${url.slice(0, url.length - 1)}`, {\n        tagValue: tag,\n        name: title,\n      });\n\n      if (code === 201) {\n        setTitle('');\n        setDisplay(prevState => !prevState);\n        setUpdate(prevState => !prevState);\n      } else {\n        alert('생성에 실패했습니다.');\n        setTitle('');\n      }\n    } else {\n      alert('이름을 입력해주세요.');\n    }\n  };\n\n  return (\n    <>\n      <div\n        className='new-card-form'\n        style={{ display: display ? 'block' : 'none' }}\n      >\n        <input\n          name='title'\n          type='text'\n          placeholder='title'\n          value={title}\n          onChange={onChangeHandler}\n        ></input>\n        <div className='add-button'>\n          <button onClick={addCardHandler}>Add Card</button>\n          <button onClick={onClickHandler}>Cancel</button>\n        </div>\n      </div>\n      <div\n        className='add-button'\n        style={{ display: display ? 'none' : 'block' }}\n      >\n        <button onClick={onClickHandler}>Add another card</button>\n      </div>\n    </>\n  );\n};\n\nexport default AddButton;\n","const colors = [\n  { name: 'green', color: '#80E12A' },\n  { name: 'red', color: '#CD1F48' },\n  { name: 'yellow', color: '#FFDC3C' },\n  { name: 'pink', color: '#FF98FE' },\n  { name: 'purple', color: '#960a96' },\n  { name: 'orange', color: '#E56D29' },\n  { name: 'blue', color: '#0A6EFF' },\n];\n\nexport default colors;\n","import React, { useState } from 'react';\nimport { usePostApi, useGetApi } from '../../api/index';\nimport colors from '../../assets/colors';\n\nconst Label = ({ id, url, modalUpdate, setModalUpdate, setUpdate, labels }) => {\n  const [openLabel, setOpenLabel] = useState(false);\n  const [selectColor, setSelectColor] = useState('');\n  const [labelName, setLabelName] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [postData] = usePostApi();\n  const [data] = useGetApi(\n    'get',\n    url.slice(0, url.length - 6) + '/label',\n    modalUpdate,\n  );\n\n  const onChangeHandler = e => {\n    setLabelName(e.target.value);\n  };\n  const openLabelButton = () => {\n    setOpenLabel(p => !p);\n  };\n  const selectButton = e => {\n    setSelectColor(e.target.className);\n  };\n  const handleDisplay = () => {\n    setDisplay(p => !p);\n  };\n\n  const deleteLabel = async e => {\n    // console.log(e.target.name);\n    // console.log(url);\n    // const code = await postData(\n    //   url.slice(0, url.length - 6) + '/label/delete',\n    //   {\n    //     labelsIds: e.target.name,\n    //   },\n    // );\n    // if (code === 200) {\n    //   setSelectColor('');\n    //   setLabelName('');\n    // } else {\n    //   alert('삭제 실패');\n    // }\n  };\n\n  const addBoardLabelButton = async () => {\n    if (labelName.length > 0 && selectColor.length > 0) {\n      const code = await postData(url.slice(0, url.length - 6) + '/label', {\n        name: labelName,\n        color: selectColor,\n      });\n\n      if (code === 201) {\n        setSelectColor('');\n        setLabelName('');\n        setDisplay(p => !p);\n        setModalUpdate(p => !p);\n      } else {\n        alert('추가 실패');\n      }\n    } else {\n      alert('이름과 색을 정해주세요!');\n    }\n  };\n\n  const checkOverlap = (arr, id) => {\n    let result = false;\n    arr.map(el => {\n      if (el.id === id) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  const addCardLabelButton = async e => {\n    const code = checkOverlap(labels, e.target.id)\n      ? await postData(`/card/${id}/label/delete`, {\n          labelIds: [e.target.id],\n        })\n      : await postData(`/card/${id}/label`, {\n          labelId: e.target.id,\n        });\n\n    if (code === 201 || code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  const newRenderColors = () => {\n    let colorlist = {};\n    data.map(el => {\n      colorlist[el.color] = data.indexOf(el);\n    });\n\n    return colors.map((el, i) => {\n      if (colorlist[el.color] !== undefined) {\n        let value = data[colorlist[el.color]];\n\n        return (\n          <div\n            key={i}\n            style={{\n              display: 'flex',\n            }}\n          >\n            <span\n              // key={i}\n              id={value.id}\n              className={value.color}\n              style={{\n                backgroundColor: value.color,\n                color: '#fff',\n                display: 'block',\n                // float: 'left',\n                margin: '2px',\n                width: '160px',\n                height: '20px',\n                padding: '3px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={addCardLabelButton}\n            >\n              {value.name}\n            </span>\n            <button\n              name={value.id}\n              onClick={deleteLabel}\n              style={{ float: 'right' }}\n            >\n              X\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} style={{ display: 'flex' }}>\n            <span\n              // key={i}\n              className={el.color}\n              style={{\n                backgroundColor: el.color,\n                color: '#fff',\n                display: 'inline-block',\n                margin: '1px',\n                padding: '3px',\n                width: '160px',\n                height: '20px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={selectButton}\n            ></span>\n          </div>\n        );\n      }\n    });\n  };\n  return (\n    <div className='add-card-label-button'>\n      <button onClick={openLabelButton}>Label</button>\n      {openLabel ? (\n        <div className='label-modal' style={{ overflow: 'auto' }}>\n          {newRenderColors()}\n          <div\n            className='label-form'\n            style={{ display: display ? 'block' : 'none' }}\n          >\n            <input\n              value={labelName}\n              onChange={onChangeHandler}\n              style={{\n                backgroundColor: selectColor,\n                width: '160px',\n                borderRadius: '3px',\n                color: selectColor === '' ? 'black' : '#fff',\n              }}\n              placeholder='title'\n            />\n            <button onClick={addBoardLabelButton}>Add Label</button>\n            <button onClick={handleDisplay}>Cancel</button>\n          </div>\n\n          <button\n            onClick={handleDisplay}\n            style={{ display: display ? 'none' : 'block' }}\n          >\n            Add Label\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { usePostApi } from '../../api';\n\nconst ChecklistModal = ({ id, setUpdate }) => {\n  const [clicked, setClicked] = useState(false);\n  const [checkListTitle, setCheckListTitle] = useState('');\n  const [postData] = usePostApi();\n\n  const clickButton = () => {\n    setClicked(p => !p);\n  };\n  const onChangeHandler = e => {\n    setCheckListTitle(e.target.value);\n  };\n  const addCheckList = async () => {\n    if (checkListTitle.length > 0) {\n      const code = await postData(`/card/${id}/todo`, {\n        cardId: id,\n        title: checkListTitle,\n      });\n      if (code === 201 || code === 200) {\n        setUpdate(p => !p);\n        setCheckListTitle('');\n        setClicked(p => !p);\n      } else {\n        alert('체크리스트 생성 실패');\n        setUpdate(p => !p);\n      }\n    } else {\n      alert('title을 입력해주세요.');\n    }\n  };\n\n  return (\n    <div className='add-checklist-modal'>\n      <button onClick={clickButton}>CheckList</button>\n      {clicked ? (\n        <div className='checkList-modal' style={{ overflow: 'auto' }}>\n          <input\n            placeholder='checklist title'\n            value={checkListTitle}\n            onChange={onChangeHandler}\n            style={{ display: 'block' }}\n          />\n          <button onClick={addCheckList}>Add Checklist</button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChecklistModal;\n","import React, { useState } from 'react';\nimport { useUpdateApi, useDeleteApi } from '../../api/index';\n\nconst ChecklistForm = ({ el, setUpdate }) => {\n  const [updateData] = useUpdateApi();\n  const [deleteData] = useDeleteApi();\n  const [newTitle, setNewTitle] = useState(el.title);\n  const [changeButton, setChangebutton] = useState(false);\n  const onChangeTitle = e => {\n    setNewTitle(e.target.value);\n  };\n  const checkboxHandler = async e => {\n    const code = await updateData(`/todo/${e.target.name}/status`);\n    if (code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n  const changeChecklist = async () => {\n    if (changeButton) {\n      if (newTitle.length > 0 && newTitle !== el.title) {\n        const code = await updateData(`/todo/${el.todoId}`, {\n          title: newTitle,\n        });\n\n        if (code === 200) {\n          setChangebutton(false);\n          setUpdate(p => !p);\n        } else {\n          alert('실패');\n          setUpdate(p => !p);\n        }\n      } else {\n        setChangebutton(p => !p);\n      }\n    } else {\n      setChangebutton(p => !p);\n    }\n  };\n  const deleteCheckList = async () => {\n    const code = await deleteData(`/todo/${el.todoId}`);\n    if (code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  return (\n    <div className='checklist-item'>\n      <>\n        <input\n          type='checkbox'\n          name={el.todoId}\n          checked={el.status}\n          onChange={checkboxHandler}\n        />\n        {changeButton ? (\n          <span className='checklist-item-title'>\n            <input value={newTitle} onChange={onChangeTitle} />\n            <button onClick={changeChecklist}>수정</button>\n          </span>\n        ) : (\n          <span className='checklist-item-title' onClick={changeChecklist}>\n            {el.title}\n          </span>\n        )}\n        <button className='checklist-delete' onClick={deleteCheckList}>\n          X\n        </button>\n      </>\n    </div>\n  );\n};\n\nexport default ChecklistForm;\n","import React, { useState } from 'react';\nimport { usePostApi } from '../../api';\nimport ChecklistForm from './ChecklistForm';\n\nconst Checklist = ({ id, data, setUpdate, percent }) => {\n  const [clicked, setClicked] = useState(false);\n  const [title, setTitle] = useState('');\n  const [postData] = usePostApi();\n  const clickButtonHandler = () => {\n    setClicked(p => !p);\n  };\n  const addChecklistHandler = async () => {\n    if (title.length > 0) {\n      const code = await postData(`/card/${id}/todo`, {\n        cardId: id,\n        title: title,\n      });\n      if (code === 201 || code === 200) {\n        setTitle('');\n        setClicked(p => !p);\n        setUpdate(p => !p);\n      } else {\n        alert('생성 실패!');\n      }\n    } else {\n      alert('title을 입력해주세요');\n    }\n  };\n  const onChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n  return (\n    <>\n      <div className='checklist-header'>\n        <h4 style={{ margin: '0px 0px 5px 0px' }}>CheckList</h4>\n        <div className='progress-container'>\n          <div className='progress-percent'>{percent}%</div>\n          <div className='progress-bar'>\n            <div\n              className='progress-percent-bar'\n              style={{\n                width: `${percent}%`,\n              }}\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div className='checklist- inner'>\n        {data.map((el, i) => (\n          <ChecklistForm key={i} el={el} setUpdate={setUpdate} />\n        ))}\n      </div>\n      <div className='checklist-add-button'>\n        {clicked ? (\n          <>\n            <input\n              placeholder='title'\n              value={title}\n              onChange={onChangeHandler}\n            ></input>\n            <button onClick={addChecklistHandler}>Add</button>\n            <button onClick={clickButtonHandler}>Cancel</button>\n          </>\n        ) : (\n          <button onClick={clickButtonHandler}>Add an item</button>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Checklist;\n","import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n\nconst CalendarModal = () => {\n  const [value, onChange] = useState(new Date());\n  return <div>{/* <Calendar onChange={onChange} value={value} /> */}</div>;\n};\n\nexport default CalendarModal;\n","import React, { useState } from 'react';\nimport Label from '../modal/Label';\nimport CheckListModal from '../modal/ChecklistModal';\nimport Checklist from '../modal/Checklist';\nimport CalendarModal from '../modal/CalendarModal';\nimport { useGetApi } from '../../api';\n\nconst CardModal = ({ onClose, id, title, tag, url, setUpdate, labels }) => {\n  const [modalUpdate, setModalUpdate] = useState(false);\n  const [data] = useGetApi('get', `/card/${id}/todo`, modalUpdate);\n\n  const progressCalculator = data => {\n    let count = 0;\n    data.map(el => {\n      if (el.status) {\n        count++;\n      }\n    });\n    const result = Math.round((count / data.length) * 100);\n    return result;\n  };\n\n  return (\n    <>\n      <div className='modal-container' />\n      <div className='modal-wrapper'>\n        <div tabIndex='0' className='modal-inner'>\n          <button className='modal-close' onClick={onClose}>\n            X\n          </button>\n          <div className='modal-header'>\n            <div className='modal-labels'>\n              {labels.length > 0\n                ? labels.map((el, i) => (\n                    <span\n                      key={i}\n                      className='label'\n                      style={{\n                        backgroundColor: el.color,\n                      }}\n                    >\n                      {el.name}\n                    </span>\n                  ))\n                : null}\n            </div>\n            <h2>{title}</h2>\n          </div>\n          <div className='modal-contents'>\n            {data.length > 0 ? (\n              <div className='checklist-container'>\n                <Checklist\n                  id={id}\n                  data={data}\n                  setUpdate={setModalUpdate}\n                  percent={progressCalculator(data)}\n                />\n              </div>\n            ) : null}\n          </div>\n          <div className='modal-sidebar'>\n            <Label\n              url={url}\n              id={id}\n              modalUpdate={modalUpdate}\n              setModalUpdate={setModalUpdate}\n              setUpdate={setUpdate}\n              labels={labels}\n            />\n            <CheckListModal id={id} setUpdate={setModalUpdate} />\n            <CalendarModal />\n            <div>CheckList, Duedate, Calendar</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CardModal;\n","import React, { memo, useState } from 'react';\nimport { usePostApi, useUpdateApi } from '../../api/index';\nimport { useDrag } from 'react-dnd';\nimport CardModal from './CardModal';\n\nconst CardListForm = ({\n  id,\n  title,\n  tag,\n  memberNames,\n  labels,\n  url,\n  setUpdate,\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'card', id: id, tagValue: tag },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const [edit, setEdit] = useState(false);\n  const [cardTitle, setCardTitle] = useState(title);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [postData] = usePostApi();\n  const [updateData] = useUpdateApi();\n\n  const editCard = () => {\n    setEdit(p => !p);\n  };\n  const inputHandler = e => {\n    setCardTitle(e.target.value);\n  };\n\n  const clickModal = () => {\n    setModalVisible(p => !p);\n  };\n\n  const sendUpdate = async () => {\n    if (cardTitle !== title) {\n      let code = await updateData(url.slice(0, url.length - 1) + '/name', {\n        id: id,\n        name: cardTitle,\n      });\n      if (code === 200) {\n        setEdit(p => !p);\n        setUpdate(prevState => !prevState);\n      } else {\n        alert('update 실패');\n      }\n    } else {\n      setEdit(p => !p);\n    }\n  };\n\n  const deleteCard = async () => {\n    console.log(id);\n    let result_code = await postData(url.slice(0, url.length - 1) + '/delete', {\n      id: id,\n    });\n    if (result_code === 201) {\n      setUpdate(prevState => !prevState);\n    } else {\n      alert('삭제에 실패하였습니다.');\n      setUpdate(prevState => !prevState);\n    }\n  };\n\n  return (\n    <>\n      {modalVisible ? (\n        <CardModal\n          onClose={clickModal}\n          id={id}\n          title={title}\n          tag={tag}\n          url={url}\n          setUpdate={setUpdate}\n          labels={labels}\n        />\n      ) : null}\n      <div\n        className='card'\n        opacity={isDragging ? 0.5 : 1}\n        ref={edit ? null : drag}\n      >\n        {labels.length > 0 ? (\n          <div className='card-labels'>\n            {labels\n              .sort((a, b) => a.id - b.id)\n              .map((el, i) => (\n                <span\n                  key={i}\n                  className='label'\n                  style={{\n                    backgroundColor: el.color,\n                  }}\n                ></span>\n              ))}\n          </div>\n        ) : null}\n        {edit ? (\n          <div className='card-input'>\n            <input value={cardTitle} onChange={inputHandler} />\n            <button onClick={sendUpdate}>save</button>\n          </div>\n        ) : (\n          <div className='card-title' onClick={editCard}>\n            {title}\n          </div>\n        )}\n        {edit ? null : (\n          <div className='card-buttons'>\n            <button className='modal' onClick={clickModal}>\n              modal\n            </button>\n            <span className='card-delete-button' onClick={deleteCard}></span>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(CardListForm);\n","import React, { useState, memo, useCallback } from 'react';\nimport AddCardButton from './AddCardButton';\nimport CardListForm from './CardListForm';\nimport { useUpdateApi } from '../../api/index';\nimport { useDrop } from 'react-dnd';\n\nconst TagForm = ({ data, tag, boardUrl, setUpdate }) => {\n  const [updateData] = useUpdateApi();\n\n  const appendItem = useCallback(async item => {\n    if (item.tagValue !== tag) {\n      const code = await updateData(\n        boardUrl.slice(0, boardUrl.length - 1) + '/tag',\n        {\n          id: item.id,\n          tagValue: tag,\n        },\n      );\n      if (code === 200) {\n        setUpdate(p => !p);\n      } else {\n        alert('이동 실패');\n      }\n    }\n  });\n\n  const [{ hovered }, drop] = useDrop({\n    accept: 'card',\n    drop: appendItem,\n    collect: monitor => {\n      return {\n        hovered: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <div className='tag'>\n      <div className='tag-header'>{tag}</div>\n      <div\n        className={`drop-area ${hovered ? 'drop-area-hovered' : ''}`}\n        ref={drop}\n      >\n        {console.log(data)}\n        {data\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            return (\n              <CardListForm\n                key={el.id}\n                id={el.id}\n                title={el.name}\n                memberNames={el.memberNames}\n                labels={el.labels}\n                tag={tag}\n                url={boardUrl}\n                setUpdate={setUpdate}\n              />\n            );\n          })}\n      </div>\n      <AddCardButton tag={tag} url={boardUrl} setUpdate={setUpdate} />\n    </div>\n  );\n};\n\nexport default memo(TagForm);\n","import React, { useState } from 'react';\nimport { usePostApi } from '../../api/index';\n\nconst AddTagButton = ({ url, setUpdate }) => {\n  const [tagName, setTagName] = useState('');\n  const [cardName, setCardName] = useState('');\n  const [clicked, setClicked] = useState(false);\n  const [postData] = usePostApi();\n\n  const onClickHandler = () => {\n    setTagName('');\n    setCardName('');\n    setClicked(prevState => !prevState);\n  };\n  const onChangeHandler = e => {\n    setTagName(e.target.value);\n  };\n  const onCardChangeHandler = e => {\n    setCardName(e.target.value);\n  };\n\n  const addTag = async () => {\n    if (tagName.length === 0 || cardName.length === 0) {\n      alert('빈칸이 있습니다.');\n    } else {\n      const code = await postData(`${url.slice(0, url.length - 1)}`, {\n        tagValue: tagName,\n        name: cardName,\n      });\n      if (code === 201) {\n        setTagName('');\n        setCardName('');\n        setUpdate(prevState => !prevState);\n        setClicked(prevState => !prevState);\n      } else {\n        alert('생성에 실패했습니다.');\n        setTagName('');\n      }\n    }\n  };\n\n  return (\n    <>\n      <div\n        className='tag-add-button'\n        style={{ display: clicked ? 'inline-block' : 'none' }}\n      >\n        <input\n          placeholder='tag name'\n          value={tagName}\n          onChange={onChangeHandler}\n        />\n        <input\n          placeholder='card name'\n          value={cardName}\n          onChange={onCardChangeHandler}\n        />\n        <button className='tag-add-bt' onClick={addTag}>\n          Add\n        </button>\n        <button className='tag-add-bt' onClick={onClickHandler}>\n          Cancel\n        </button>\n      </div>\n      <div\n        className='tag-add-button'\n        style={{ display: clicked ? 'none' : 'inline-block' }}\n      >\n        <button className='tag-add-bt' onClick={onClickHandler}>\n          Add Tag\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default AddTagButton;\n","import React from 'react';\nimport TagForm from './TagForm';\nimport { useGetCardApi } from '../../api/index';\nimport AddTagButton from './AddTagButton';\n\nconst CardList = ({ history, location }) => {\n  const [tagList, cardList, setUpdate] = useGetCardApi(`${location.pathname}`);\n\n  const onClickHandler = () => {\n    history.goBack();\n  };\n\n  return (\n    <div className='card-container'>\n      <div id='card-header'>\n        <div id='card-header-items'>\n          <div className='go-back'>\n            <a className='go-back-button' onClick={onClickHandler}>\n              <span className='go-back-img'></span>\n            </a>\n          </div>\n          <AddTagButton url={location.pathname} setUpdate={setUpdate} />\n        </div>\n      </div>\n      <div id='card-list-container'>\n        {cardList.length > 0 ? (\n          <div id='tag-all-list'>\n            {cardList.map((el, i) => {\n              let index = cardList.indexOf(el);\n              return (\n                <TagForm\n                  key={i}\n                  data={el}\n                  tag={tagList[index]}\n                  boardUrl={location.pathname}\n                  setUpdate={setUpdate}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          <div id='tag-all-list'>\n            <div className='no-card'>Please Make a Card</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\nimport queryString from 'query-string';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Nav from '../components/Nav.jsx';\nimport BoardList from '../components/board/BoardList';\nimport CardList from '../components/card/CardList';\nimport { setAccessToken } from '../api';\n\nconst BoardPage = ({ match, history, location }) => {\n  if (location.search.length > 0) {\n    setAccessToken(queryString.parse(location.search));\n  }\n\n  return (\n    <Router>\n      <Nav />\n      <Route path={match.path} component={BoardList} />\n      <Route\n        path={`${match.path.slice(0, match.path.length - 1)}/:id/cards`}\n        component={CardList}\n      />\n    </Router>\n  );\n};\n\nexport default BoardPage;\n","import React from 'react';\n\nconst NotFound = () => {\n  return <div>This page is not Found</div>;\n};\n\nexport default NotFound;\n","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Login from './pages/LoginPage.jsx';\nimport Board from './pages/BoardPage.jsx';\nimport NotFound from './pages/NotFound';\nimport axios from 'axios';\n\nconst App = () => {\n  const onSilentRefresh = async token => {\n    // let data = await axios.post()\n  };\n  const [login, setLogin] = useState(false);\n\n  useEffect(() => {\n    onSilentRefresh();\n  });\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={() => (\n              <Login refreshToken={onSilentRefresh} setLogin={setLogin} />\n            )}\n          />\n\n          <Route path='/boards' component={Board} />\n          <Redirect from='/board/:id/cards' to='/boards' />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </DndProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './css/main.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}