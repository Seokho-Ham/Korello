{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import queryString from'query-string';import{BrowserRouter as Router,Route}from'react-router-dom';import Nav from'../components/Nav.jsx';import BoardList from'../components/board/BoardList';import CardList from'../components/card/CardList';import{setAccessToken}from'../api';var BoardPage=function BoardPage(_ref){var match=_ref.match,history=_ref.history,location=_ref.location;if(location.search.length>0){setAccessToken(queryString.parse(location.search));}return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Nav,{}),/*#__PURE__*/_jsx(Route,{path:match.path,component:BoardList}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path.slice(0,match.path.length-1),\"/:id/cards\"),component:CardList})]});};export default BoardPage;","map":{"version":3,"sources":["/Users/cocoball/Korello/src/pages/BoardPage.jsx"],"names":["React","queryString","BrowserRouter","Router","Route","Nav","BoardList","CardList","setAccessToken","BoardPage","match","history","location","search","length","parse","path","slice"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,KAA+C,kBAA/C,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,+BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,OAASC,cAAT,KAA+B,QAA/B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAkC,IAA/BC,CAAAA,KAA+B,MAA/BA,KAA+B,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,QAAe,MAAfA,QAAe,CAClD,GAAIA,QAAQ,CAACC,MAAT,CAAgBC,MAAhB,CAAyB,CAA7B,CAAgC,CAC9BN,cAAc,CAACP,WAAW,CAACc,KAAZ,CAAkBH,QAAQ,CAACC,MAA3B,CAAD,CAAd,CACD,CAED,mBACE,MAAC,MAAD,yBACE,KAAC,GAAD,IADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAEH,KAAK,CAACM,IAAnB,CAAyB,SAAS,CAAEV,SAApC,EAFF,cAGE,KAAC,KAAD,EACE,IAAI,WAAKI,KAAK,CAACM,IAAN,CAAWC,KAAX,CAAiB,CAAjB,CAAoBP,KAAK,CAACM,IAAN,CAAWF,MAAX,CAAoB,CAAxC,CAAL,cADN,CAEE,SAAS,CAAEP,QAFb,EAHF,GADF,CAUD,CAfD,CAiBA,cAAeE,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport queryString from 'query-string';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Nav from '../components/Nav.jsx';\nimport BoardList from '../components/board/BoardList';\nimport CardList from '../components/card/CardList';\nimport { setAccessToken } from '../api';\n\nconst BoardPage = ({ match, history, location }) => {\n  if (location.search.length > 0) {\n    setAccessToken(queryString.parse(location.search));\n  }\n\n  return (\n    <Router>\n      <Nav />\n      <Route path={match.path} component={BoardList} />\n      <Route\n        path={`${match.path.slice(0, match.path.length - 1)}/:id/cards`}\n        component={CardList}\n      />\n    </Router>\n  );\n};\n\nexport default BoardPage;\n"]},"metadata":{},"sourceType":"module"}