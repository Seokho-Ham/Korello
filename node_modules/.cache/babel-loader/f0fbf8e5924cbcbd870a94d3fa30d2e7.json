{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cocoball/Korello/src/components/modal/Label.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { usePostApi, useGetApi } from '../../api/index';\nimport colors from '../../assets/colors';\n\nconst Label = ({\n  id,\n  url,\n  modalUpdate,\n  setModalUpdate,\n  setUpdate,\n  labels\n}) => {\n  _s();\n\n  const [openLabel, setOpenLabel] = useState(false);\n  const [selectColor, setSelectColor] = useState('');\n  const [labelName, setLabelName] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [postData] = usePostApi();\n  const [data] = useGetApi('get', url.slice(0, url.length - 6) + '/label', modalUpdate);\n\n  const onChangeHandler = e => {\n    setLabelName(e.target.value);\n  };\n\n  const openLabelButton = () => {\n    setOpenLabel(p => !p);\n  };\n\n  const selectButton = e => {\n    setSelectColor(e.target.className);\n  };\n\n  const handleDisplay = () => {\n    setDisplay(p => !p);\n  };\n\n  const deleteLabel = async e => {// console.log(e.target.name);\n    // console.log(url);\n    // const code = await postData(\n    //   url.slice(0, url.length - 6) + '/label/delete',\n    //   {\n    //     labelsIds: e.target.name,\n    //   },\n    // );\n    // if (code === 200) {\n    //   setSelectColor('');\n    //   setLabelName('');\n    // } else {\n    //   alert('삭제 실패');\n    // }\n  };\n\n  const addBoardLabelButton = async () => {\n    if (labelName.length > 0 && selectColor.length > 0) {\n      const code = await postData(url.slice(0, url.length - 6) + '/label', {\n        name: labelName,\n        color: selectColor\n      });\n\n      if (code === 201) {\n        setSelectColor('');\n        setLabelName('');\n        setDisplay(p => !p);\n        setModalUpdate(p => !p);\n      } else {\n        alert('추가 실패');\n      }\n    } else {\n      alert('이름과 색을 정해주세요!');\n    }\n  };\n\n  const checkOverlap = (arr, id) => {\n    let result = false;\n    arr.map(el => {\n      if (el.id === id) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  const addCardLabelButton = async e => {\n    const code = checkOverlap(labels, e.target.id) ? await postData(`/card/${id}/label/delete`, {\n      labelIds: [e.target.id]\n    }) : await postData(`/card/${id}/label`, {\n      labelId: e.target.id\n    });\n\n    if (code === 201 || code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  const newRenderColors = () => {\n    let colorlist = {};\n    data.map(el => {\n      colorlist[el.color] = data.indexOf(el);\n    });\n    return colors.map((el, i) => {\n      if (colorlist[el.color] !== undefined) {\n        let value = data[colorlist[el.color]];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            // key={i}\n            id: value.id,\n            className: value.color,\n            style: {\n              backgroundColor: value.color,\n              color: '#fff',\n              display: 'block',\n              // float: 'left',\n              margin: '2px',\n              width: '160px',\n              height: '20px',\n              padding: '3px',\n              cursor: 'pointer',\n              borderRadius: '3px'\n            },\n            onClick: addCardLabelButton,\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            name: value.id,\n            onClick: deleteLabel,\n            style: {\n              float: 'right'\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            // key={i}\n            className: el.color,\n            style: {\n              backgroundColor: el.color,\n              color: '#fff',\n              display: 'inline-block',\n              margin: '1px',\n              padding: '3px',\n              width: '160px',\n              height: '20px',\n              cursor: 'pointer',\n              borderRadius: '3px'\n            },\n            onClick: selectButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-card-label-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openLabelButton,\n      children: \"Label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), openLabel ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-modal\",\n      style: {\n        overflow: 'auto'\n      },\n      children: [newRenderColors(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-form\",\n        style: {\n          display: display ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: labelName,\n          onChange: onChangeHandler,\n          style: {\n            backgroundColor: selectColor,\n            width: '160px',\n            borderRadius: '3px',\n            color: selectColor === '' ? 'black' : '#fff'\n          },\n          placeholder: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addBoardLabelButton,\n          children: \"Add Label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDisplay,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDisplay,\n        style: {\n          display: display ? 'none' : 'block'\n        },\n        children: \"Add Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Label, \"QSmtywtrLqD0yERmcPES4504f44=\", false, function () {\n  return [usePostApi, useGetApi];\n});\n\n_c = Label;\nexport default Label;\n\nvar _c;\n\n$RefreshReg$(_c, \"Label\");","map":{"version":3,"sources":["/Users/cocoball/Korello/src/components/modal/Label.jsx"],"names":["React","useState","usePostApi","useGetApi","colors","Label","id","url","modalUpdate","setModalUpdate","setUpdate","labels","openLabel","setOpenLabel","selectColor","setSelectColor","labelName","setLabelName","display","setDisplay","postData","data","slice","length","onChangeHandler","e","target","value","openLabelButton","p","selectButton","className","handleDisplay","deleteLabel","addBoardLabelButton","code","name","color","alert","checkOverlap","arr","result","map","el","addCardLabelButton","labelIds","labelId","newRenderColors","colorlist","indexOf","i","undefined","backgroundColor","margin","width","height","padding","cursor","borderRadius","float","overflow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { usePostApi, useGetApi } from '../../api/index';\nimport colors from '../../assets/colors';\n\nconst Label = ({ id, url, modalUpdate, setModalUpdate, setUpdate, labels }) => {\n  const [openLabel, setOpenLabel] = useState(false);\n  const [selectColor, setSelectColor] = useState('');\n  const [labelName, setLabelName] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [postData] = usePostApi();\n  const [data] = useGetApi(\n    'get',\n    url.slice(0, url.length - 6) + '/label',\n    modalUpdate,\n  );\n\n  const onChangeHandler = e => {\n    setLabelName(e.target.value);\n  };\n  const openLabelButton = () => {\n    setOpenLabel(p => !p);\n  };\n  const selectButton = e => {\n    setSelectColor(e.target.className);\n  };\n  const handleDisplay = () => {\n    setDisplay(p => !p);\n  };\n\n  const deleteLabel = async e => {\n    // console.log(e.target.name);\n    // console.log(url);\n    // const code = await postData(\n    //   url.slice(0, url.length - 6) + '/label/delete',\n    //   {\n    //     labelsIds: e.target.name,\n    //   },\n    // );\n    // if (code === 200) {\n    //   setSelectColor('');\n    //   setLabelName('');\n    // } else {\n    //   alert('삭제 실패');\n    // }\n  };\n\n  const addBoardLabelButton = async () => {\n    if (labelName.length > 0 && selectColor.length > 0) {\n      const code = await postData(url.slice(0, url.length - 6) + '/label', {\n        name: labelName,\n        color: selectColor,\n      });\n\n      if (code === 201) {\n        setSelectColor('');\n        setLabelName('');\n        setDisplay(p => !p);\n        setModalUpdate(p => !p);\n      } else {\n        alert('추가 실패');\n      }\n    } else {\n      alert('이름과 색을 정해주세요!');\n    }\n  };\n\n  const checkOverlap = (arr, id) => {\n    let result = false;\n    arr.map(el => {\n      if (el.id === id) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  const addCardLabelButton = async e => {\n    const code = checkOverlap(labels, e.target.id)\n      ? await postData(`/card/${id}/label/delete`, {\n          labelIds: [e.target.id],\n        })\n      : await postData(`/card/${id}/label`, {\n          labelId: e.target.id,\n        });\n\n    if (code === 201 || code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  const newRenderColors = () => {\n    let colorlist = {};\n    data.map(el => {\n      colorlist[el.color] = data.indexOf(el);\n    });\n\n    return colors.map((el, i) => {\n      if (colorlist[el.color] !== undefined) {\n        let value = data[colorlist[el.color]];\n\n        return (\n          <div\n            key={i}\n            style={{\n              display: 'flex',\n            }}\n          >\n            <span\n              // key={i}\n              id={value.id}\n              className={value.color}\n              style={{\n                backgroundColor: value.color,\n                color: '#fff',\n                display: 'block',\n                // float: 'left',\n                margin: '2px',\n                width: '160px',\n                height: '20px',\n                padding: '3px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={addCardLabelButton}\n            >\n              {value.name}\n            </span>\n            <button\n              name={value.id}\n              onClick={deleteLabel}\n              style={{ float: 'right' }}\n            >\n              X\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} style={{ display: 'flex' }}>\n            <span\n              // key={i}\n              className={el.color}\n              style={{\n                backgroundColor: el.color,\n                color: '#fff',\n                display: 'inline-block',\n                margin: '1px',\n                padding: '3px',\n                width: '160px',\n                height: '20px',\n                cursor: 'pointer',\n                borderRadius: '3px',\n              }}\n              onClick={selectButton}\n            ></span>\n          </div>\n        );\n      }\n    });\n  };\n  return (\n    <div className='add-card-label-button'>\n      <button onClick={openLabelButton}>Label</button>\n      {openLabel ? (\n        <div className='label-modal' style={{ overflow: 'auto' }}>\n          {newRenderColors()}\n          <div\n            className='label-form'\n            style={{ display: display ? 'block' : 'none' }}\n          >\n            <input\n              value={labelName}\n              onChange={onChangeHandler}\n              style={{\n                backgroundColor: selectColor,\n                width: '160px',\n                borderRadius: '3px',\n                color: selectColor === '' ? 'black' : '#fff',\n              }}\n              placeholder='title'\n            />\n            <button onClick={addBoardLabelButton}>Add Label</button>\n            <button onClick={handleDisplay}>Cancel</button>\n          </div>\n\n          <button\n            onClick={handleDisplay}\n            style={{ display: display ? 'none' : 'block' }}\n          >\n            Add Label\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Label;\n"]},"metadata":{},"sourceType":"module"}