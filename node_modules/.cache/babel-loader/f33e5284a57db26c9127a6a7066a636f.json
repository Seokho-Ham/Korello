{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/cocoball/korello-practice/korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useState,useRef}from'react';import{useHistory}from'react-router-dom';var obj={email:'seokho9522@gmail.com',password:'1111'};var LoginForm=function LoginForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var inputRef=useRef(null);var history=useHistory();var onChangeForm=function onChangeForm(e){if(e.target.name==='email'){setEmail(e.target.value);}else if(e.target.name==='password'){setPassword(e.target.value);}};var onSubmit=function onSubmit(e){e.preventDefault();if(email===obj.email&&password===obj.password){props.handler();history.push('/boards');}else{alert('아이디 혹은 비밀번호가 올바르지 않습니다.');setEmail('');setPassword('');inputRef.current.focus();}};return/*#__PURE__*/_jsx(\"div\",{id:\"loginform\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{ref:inputRef,name:\"email\",type:\"email\",value:email,onChange:onChangeForm}),/*#__PURE__*/_jsx(\"h5\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{name:\"password\",type:\"password\",value:password,onChange:onChangeForm}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{children:\"\\uB85C\\uADF8\\uC778\"})]})});};export default LoginForm;","map":{"version":3,"sources":["/Users/cocoball/korello-practice/korello/src/components/user/LoginForm.jsx"],"names":["React","memo","useState","useRef","useHistory","obj","email","password","LoginForm","props","setEmail","setPassword","inputRef","history","onChangeForm","e","target","name","value","onSubmit","preventDefault","handler","push","alert","current","focus"],"mappings":"uPAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,QAAtB,CAAgCC,MAAhC,KAA8C,OAA9C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,GAAG,CAAG,CACVC,KAAK,CAAE,sBADG,CAEVC,QAAQ,CAAE,MAFA,CAAZ,CAKA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,eACCP,QAAQ,CAAC,EAAD,CADT,wCAClBI,KADkB,eACXI,QADW,8BAEOR,QAAQ,CAAC,EAAD,CAFf,yCAElBK,QAFkB,eAERI,WAFQ,eAGzB,GAAMC,CAAAA,QAAQ,CAAGT,MAAM,CAAC,IAAD,CAAvB,CACA,GAAMU,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CAEA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxB,GAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,GAAkB,OAAtB,CAA+B,CAC7BP,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASE,KAAV,CAAR,CACD,CAFD,IAEO,IAAIH,CAAC,CAACC,MAAF,CAASC,IAAT,GAAkB,UAAtB,CAAkC,CACvCN,WAAW,CAACI,CAAC,CAACC,MAAF,CAASE,KAAV,CAAX,CACD,CACF,CAND,CAOA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAJ,CAAC,CAAI,CACpBA,CAAC,CAACK,cAAF,GAEA,GAAId,KAAK,GAAKD,GAAG,CAACC,KAAd,EAAuBC,QAAQ,GAAKF,GAAG,CAACE,QAA5C,CAAsD,CACpDE,KAAK,CAACY,OAAN,GACAR,OAAO,CAACS,IAAR,CAAa,SAAb,EACD,CAHD,IAGO,CACLC,KAAK,CAAC,yBAAD,CAAL,CACAb,QAAQ,CAAC,EAAD,CAAR,CACAC,WAAW,CAAC,EAAD,CAAX,CACAC,QAAQ,CAACY,OAAT,CAAiBC,KAAjB,GACD,CACF,CAZD,CAcA,mBACE,YAAK,EAAE,CAAC,WAAR,uBACE,cAAM,QAAQ,CAAEN,QAAhB,wBACE,0CADF,cAEE,cACE,GAAG,CAAEP,QADP,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,OAHP,CAIE,KAAK,CAAEN,KAJT,CAKE,QAAQ,CAAEQ,YALZ,EAFF,cASE,gDATF,cAUE,cACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEP,QAHT,CAIE,QAAQ,CAAEO,YAJZ,EAVF,cAgBE,aAhBF,cAiBE,8CAjBF,GADF,EADF,CAuBD,CAlDD,CAoDA,cAAeN,CAAAA,SAAf","sourcesContent":["import React, { memo, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst obj = {\n  email: 'seokho9522@gmail.com',\n  password: '1111',\n};\n\nconst LoginForm = props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const inputRef = useRef(null);\n  const history = useHistory();\n\n  const onChangeForm = e => {\n    if (e.target.name === 'email') {\n      setEmail(e.target.value);\n    } else if (e.target.name === 'password') {\n      setPassword(e.target.value);\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === obj.email && password === obj.password) {\n      props.handler();\n      history.push('/boards');\n    } else {\n      alert('아이디 혹은 비밀번호가 올바르지 않습니다.');\n      setEmail('');\n      setPassword('');\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <div id='loginform'>\n      <form onSubmit={onSubmit}>\n        <h5>아이디</h5>\n        <input\n          ref={inputRef}\n          name='email'\n          type='email'\n          value={email}\n          onChange={onChangeForm}\n        />\n        <h5>비밀번호</h5>\n        <input\n          name='password'\n          type='password'\n          value={password}\n          onChange={onChangeForm}\n        />\n        <br></br>\n        <button>로그인</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}