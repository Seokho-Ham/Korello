{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cocoball/korello-practice/korello/src/components/card/TagForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo, useCallback } from 'react';\nimport AddCardButton from './AddCardButton';\nimport CardListForm from './CardListForm';\nimport { useUpdateApi } from '../../api/index';\nimport { useDrop } from 'react-dnd';\n\nconst TagForm = ({\n  data,\n  tag,\n  boardUrl,\n  setUpdate\n}) => {\n  _s();\n\n  const [updateData] = useUpdateApi();\n  const appendItem = useCallback(async item => {\n    if (item.tagValue !== tag) {\n      const code = await updateData(boardUrl.slice(0, boardUrl.length - 1) + '/tag', {\n        id: item.id,\n        tagValue: tag\n      });\n\n      if (code === 200) {\n        setUpdate(p => !p);\n      } else {\n        alert('이동 실패');\n      }\n    }\n  });\n  const [{\n    hovered\n  }, drop] = useDrop({\n    accept: 'card',\n    drop: appendItem,\n    collect: monitor => {\n      return {\n        hovered: monitor.isOver()\n      };\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tag\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag-header\",\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drop-area ${hovered ? 'drop-area-hovered' : ''}`,\n      ref: drop,\n      children: [console.log(data), data.sort((a, b) => a.id - b.id).map(el => {\n        return /*#__PURE__*/_jsxDEV(CardListForm, {\n          id: el.id,\n          title: el.name,\n          memberNames: el.memberNames,\n          labels: el.labels,\n          tag: tag,\n          url: boardUrl,\n          setUpdate: setUpdate\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCardButton, {\n      tag: tag,\n      url: boardUrl,\n      setUpdate: setUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagForm, \"tio97zXnHWK04oy4f6l76JzP2gQ=\", false, function () {\n  return [useUpdateApi, useDrop];\n});\n\n_c = TagForm;\nexport default _c2 = /*#__PURE__*/memo(TagForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TagForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/cocoball/korello-practice/korello/src/components/card/TagForm.jsx"],"names":["React","useState","memo","useCallback","AddCardButton","CardListForm","useUpdateApi","useDrop","TagForm","data","tag","boardUrl","setUpdate","updateData","appendItem","item","tagValue","code","slice","length","id","p","alert","hovered","drop","accept","collect","monitor","isOver","console","log","sort","a","b","map","el","name","memberNames","labels"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,WAAhC,QAAmD,OAAnD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AAAA;;AACtD,QAAM,CAACC,UAAD,IAAeP,YAAY,EAAjC;AAEA,QAAMQ,UAAU,GAAGX,WAAW,CAAC,MAAMY,IAAN,IAAc;AAC3C,QAAIA,IAAI,CAACC,QAAL,KAAkBN,GAAtB,EAA2B;AACzB,YAAMO,IAAI,GAAG,MAAMJ,UAAU,CAC3BF,QAAQ,CAACO,KAAT,CAAe,CAAf,EAAkBP,QAAQ,CAACQ,MAAT,GAAkB,CAApC,IAAyC,MADd,EAE3B;AACEC,QAAAA,EAAE,EAAEL,IAAI,CAACK,EADX;AAEEJ,QAAAA,QAAQ,EAAEN;AAFZ,OAF2B,CAA7B;;AAOA,UAAIO,IAAI,KAAK,GAAb,EAAkB;AAChBL,QAAAA,SAAS,CAACS,CAAC,IAAI,CAACA,CAAP,CAAT;AACD,OAFD,MAEO;AACLC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF;AACF,GAf6B,CAA9B;AAiBA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAcC,IAAd,IAAsBjB,OAAO,CAAC;AAClCkB,IAAAA,MAAM,EAAE,MAD0B;AAElCD,IAAAA,IAAI,EAAEV,UAF4B;AAGlCY,IAAAA,OAAO,EAAEC,OAAO,IAAI;AAClB,aAAO;AACLJ,QAAAA,OAAO,EAAEI,OAAO,CAACC,MAAR;AADJ,OAAP;AAGD;AAPiC,GAAD,CAAnC;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BlB;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAG,aAAYa,OAAO,GAAG,mBAAH,GAAyB,EAAG,EAD7D;AAEE,MAAA,GAAG,EAAEC,IAFP;AAAA,iBAIGK,OAAO,CAACC,GAAR,CAAYrB,IAAZ,CAJH,EAKGA,IAAI,CACFsB,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACZ,EAAF,GAAOa,CAAC,CAACb,EAD1B,EAEEc,GAFF,CAEMC,EAAE,IAAI;AACT,4BACE,QAAC,YAAD;AAEE,UAAA,EAAE,EAAEA,EAAE,CAACf,EAFT;AAGE,UAAA,KAAK,EAAEe,EAAE,CAACC,IAHZ;AAIE,UAAA,WAAW,EAAED,EAAE,CAACE,WAJlB;AAKE,UAAA,MAAM,EAAEF,EAAE,CAACG,MALb;AAME,UAAA,GAAG,EAAE5B,GANP;AAOE,UAAA,GAAG,EAAEC,QAPP;AAQE,UAAA,SAAS,EAAEC;AARb,WACOuB,EAAE,CAACf,EADV;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAfF,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAwBE,QAAC,aAAD;AAAe,MAAA,GAAG,EAAEV,GAApB;AAAyB,MAAA,GAAG,EAAEC,QAA9B;AAAwC,MAAA,SAAS,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA1DD;;GAAMJ,O;UACiBF,Y,EAmBOC,O;;;KApBxBC,O;AA4DN,kCAAeN,IAAI,CAACM,OAAD,CAAnB","sourcesContent":["import React, { useState, memo, useCallback } from 'react';\nimport AddCardButton from './AddCardButton';\nimport CardListForm from './CardListForm';\nimport { useUpdateApi } from '../../api/index';\nimport { useDrop } from 'react-dnd';\n\nconst TagForm = ({ data, tag, boardUrl, setUpdate }) => {\n  const [updateData] = useUpdateApi();\n\n  const appendItem = useCallback(async item => {\n    if (item.tagValue !== tag) {\n      const code = await updateData(\n        boardUrl.slice(0, boardUrl.length - 1) + '/tag',\n        {\n          id: item.id,\n          tagValue: tag,\n        },\n      );\n      if (code === 200) {\n        setUpdate(p => !p);\n      } else {\n        alert('이동 실패');\n      }\n    }\n  });\n\n  const [{ hovered }, drop] = useDrop({\n    accept: 'card',\n    drop: appendItem,\n    collect: monitor => {\n      return {\n        hovered: monitor.isOver(),\n      };\n    },\n  });\n\n  return (\n    <div className='tag'>\n      <div className='tag-header'>{tag}</div>\n      <div\n        className={`drop-area ${hovered ? 'drop-area-hovered' : ''}`}\n        ref={drop}\n      >\n        {console.log(data)}\n        {data\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            return (\n              <CardListForm\n                key={el.id}\n                id={el.id}\n                title={el.name}\n                memberNames={el.memberNames}\n                labels={el.labels}\n                tag={tag}\n                url={boardUrl}\n                setUpdate={setUpdate}\n              />\n            );\n          })}\n      </div>\n      <AddCardButton tag={tag} url={boardUrl} setUpdate={setUpdate} />\n    </div>\n  );\n};\n\nexport default memo(TagForm);\n"]},"metadata":{},"sourceType":"module"}