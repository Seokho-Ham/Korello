{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst serverUrl = 'http://222.117.225.28:8080/api/v1';\nlet accessToken = ''; // axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\nconst setAccessToken = token => {\n  accessToken = token;\n}; //GET--------------------------------------------------------------------------------\n\n\nconst useGetApi = (method, uri, state1, state2) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState('loading');\n  const [code, setCode] = useState(0);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        let {\n          data\n        } = await axios[method](serverUrl + uri);\n        console.log('get요청');\n        console.log(typeof data);\n\n        if (data.result_body) {\n          setData(data.result_body);\n        }\n\n        setCode(data.result_code);\n        setLoading('finished');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getData();\n  }, [state1, state2]);\n  return [data, code, loading];\n};\n\n_s(useGetApi, \"2qv1+W8rfF0pxhMmAtlc58jrXoE=\");\n\nconst useGetCardApi = uri => {\n  _s2();\n\n  const [update, setUpdate] = useState(false);\n  const [tagList, setTagList] = useState([]);\n  const [cardList, setCardList] = useState([]);\n  useEffect(() => {\n    const getCard = async () => {\n      let {\n        data\n      } = await axios.get(serverUrl + uri);\n      console.log('getCard 요청');\n      console.log(typeof data);\n      let {\n        result_body\n      } = data;\n\n      if (result_body.length > 0) {\n        const obj = {};\n        const tags = [];\n        const cards = [];\n        result_body.sort((a, b) => a.id - b.id).map(el => {\n          let cardObj = {\n            id: el.id,\n            name: el.name,\n            tagValue: el.tagValue,\n            memberNames: el.memberNames,\n            labels: el.labels,\n            createDate: el.createDate,\n            updateDate: el.updateDate\n          };\n\n          if (!obj[el.tagValue]) {\n            obj[el.tagValue] = [cardObj];\n          } else {\n            obj[el.tagValue].push(cardObj);\n          }\n        });\n\n        for (let i in obj) {\n          tags.push(i);\n          cards.push(obj[i]);\n        }\n\n        setTagList(tags);\n        setCardList(cards);\n      }\n    };\n\n    getCard();\n  }, [update]);\n  return [tagList, cardList, setUpdate];\n}; //POST--------------------------------------------------------------------------------\n\n\n_s2(useGetCardApi, \"1wjRsIf3KcRPjy9Zi0RJCkFbVKk=\");\n\nconst usePostApi = () => {\n  const postData = async (uri, body) => {\n    try {\n      let {\n        data\n      } = await axios.post(serverUrl + uri, body);\n      console.log('post 요청');\n      console.log(typeof data);\n      return data.result_code;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [postData];\n}; //UPDATE--------------------------------------------------------------------------------\n\n\nconst useUpdateApi = () => {\n  const updateData = async (url, body) => {\n    try {\n      const {\n        data\n      } = await axios.put(serverUrl + url, body);\n      console.log('update 요청');\n      console.log(typeof data);\n\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [updateData];\n}; //DELETE-------------------------------------------------------------------------------\n\n\nconst useDeleteApi = () => {\n  const deleteData = async url => {\n    try {\n      const {\n        data\n      } = await axios.delete(serverUrl + url);\n      console.log('delete 요청');\n      console.log(data);\n\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [deleteData];\n};\n\nexport { useGetApi, useGetCardApi, usePostApi, useUpdateApi, useDeleteApi, setAccessToken };","map":{"version":3,"sources":["/Users/cocoball/Korello/src/api/index.js"],"names":["useState","useEffect","axios","serverUrl","accessToken","setAccessToken","token","useGetApi","method","uri","state1","state2","data","setData","loading","setLoading","code","setCode","getData","console","log","result_body","result_code","err","useGetCardApi","update","setUpdate","tagList","setTagList","cardList","setCardList","getCard","get","length","obj","tags","cards","sort","a","b","id","map","el","cardObj","name","tagValue","memberNames","labels","createDate","updateDate","push","i","usePostApi","postData","body","post","useUpdateApi","updateData","url","put","useDeleteApi","deleteData","delete"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst serverUrl = 'http://222.117.225.28:8080/api/v1';\nlet accessToken = '';\n// axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\nconst setAccessToken = token => {\n  accessToken = token;\n};\n\n//GET--------------------------------------------------------------------------------\nconst useGetApi = (method, uri, state1, state2) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState('loading');\n  const [code, setCode] = useState(0);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        let { data } = await axios[method](serverUrl + uri);\n        console.log('get요청');\n        console.log(typeof data);\n        if (data.result_body) {\n          setData(data.result_body);\n        }\n        setCode(data.result_code);\n        setLoading('finished');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getData();\n  }, [state1, state2]);\n  return [data, code, loading];\n};\n\nconst useGetCardApi = uri => {\n  const [update, setUpdate] = useState(false);\n  const [tagList, setTagList] = useState([]);\n  const [cardList, setCardList] = useState([]);\n\n  useEffect(() => {\n    const getCard = async () => {\n      let { data } = await axios.get(serverUrl + uri);\n      console.log('getCard 요청');\n      console.log(typeof data);\n      let { result_body } = data;\n\n      if (result_body.length > 0) {\n        const obj = {};\n        const tags = [];\n        const cards = [];\n        result_body\n          .sort((a, b) => a.id - b.id)\n          .map(el => {\n            let cardObj = {\n              id: el.id,\n              name: el.name,\n              tagValue: el.tagValue,\n              memberNames: el.memberNames,\n              labels: el.labels,\n              createDate: el.createDate,\n              updateDate: el.updateDate,\n            };\n\n            if (!obj[el.tagValue]) {\n              obj[el.tagValue] = [cardObj];\n            } else {\n              obj[el.tagValue].push(cardObj);\n            }\n          });\n\n        for (let i in obj) {\n          tags.push(i);\n          cards.push(obj[i]);\n        }\n\n        setTagList(tags);\n        setCardList(cards);\n      }\n    };\n    getCard();\n  }, [update]);\n\n  return [tagList, cardList, setUpdate];\n};\n\n//POST--------------------------------------------------------------------------------\nconst usePostApi = () => {\n  const postData = async (uri, body) => {\n    try {\n      let { data } = await axios.post(serverUrl + uri, body);\n      console.log('post 요청');\n      console.log(typeof data);\n      return data.result_code;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return [postData];\n};\n\n//UPDATE--------------------------------------------------------------------------------\nconst useUpdateApi = () => {\n  const updateData = async (url, body) => {\n    try {\n      const { data } = await axios.put(serverUrl + url, body);\n      console.log('update 요청');\n      console.log(typeof data);\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return [updateData];\n};\n\n//DELETE-------------------------------------------------------------------------------\nconst useDeleteApi = () => {\n  const deleteData = async url => {\n    try {\n      const { data } = await axios.delete(serverUrl + url);\n      console.log('delete 요청');\n      console.log(data);\n      if (data) {\n        return data.result_code;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return [deleteData];\n};\n\nexport {\n  useGetApi,\n  useGetCardApi,\n  usePostApi,\n  useUpdateApi,\n  useDeleteApi,\n  setAccessToken,\n};\n"]},"metadata":{},"sourceType":"module"}