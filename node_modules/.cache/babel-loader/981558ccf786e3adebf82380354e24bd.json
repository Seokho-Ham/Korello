{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/cocoball/korello-practice/korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cocoball/korello-practice/korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cocoball/korello-practice/korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{usePostApi}from'../../api';var ChecklistModal=function ChecklistModal(_ref){var id=_ref.id,setUpdate=_ref.setUpdate;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),checkListTitle=_useState4[0],setCheckListTitle=_useState4[1];var _usePostApi=usePostApi(),_usePostApi2=_slicedToArray(_usePostApi,1),postData=_usePostApi2[0];var clickButton=function clickButton(){setClicked(function(p){return!p;});};var onChangeHandler=function onChangeHandler(e){setCheckListTitle(e.target.value);};var addCheckList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var code;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(checkListTitle.length>0)){_context.next=7;break;}_context.next=3;return postData(\"/card/\".concat(id,\"/todo\"),{cardId:id,title:checkListTitle});case 3:code=_context.sent;if(code===201||code===200){setUpdate(function(p){return!p;});setCheckListTitle('');setClicked(function(p){return!p;});}else{alert('체크리스트 생성 실패');setUpdate(function(p){return!p;});}_context.next=8;break;case 7:alert('title을 입력해주세요.');case 8:case\"end\":return _context.stop();}}},_callee);}));return function addCheckList(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"add-checklist-modal\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:clickButton,children:\"CheckList\"}),clicked?/*#__PURE__*/_jsxs(\"div\",{className:\"checkList-modal\",style:{overflow:'auto'},children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"checklist title\",value:checkListTitle,onChange:onChangeHandler,style:{display:'block'}}),/*#__PURE__*/_jsx(\"button\",{onClick:addCheckList,children:\"Add Checklist\"})]}):null]});};export default ChecklistModal;","map":{"version":3,"sources":["/Users/cocoball/korello-practice/korello/src/components/modal/ChecklistModal.jsx"],"names":["React","useState","usePostApi","ChecklistModal","id","setUpdate","clicked","setClicked","checkListTitle","setCheckListTitle","postData","clickButton","p","onChangeHandler","e","target","value","addCheckList","length","cardId","title","code","alert","overflow","display"],"mappings":"kjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,WAA3B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAuB,IAApBC,CAAAA,EAAoB,MAApBA,EAAoB,CAAhBC,SAAgB,MAAhBA,SAAgB,eACdJ,QAAQ,CAAC,KAAD,CADM,wCACrCK,OADqC,eAC5BC,UAD4B,8BAEAN,QAAQ,CAAC,EAAD,CAFR,yCAErCO,cAFqC,eAErBC,iBAFqB,+BAGzBP,UAAU,EAHe,4CAGrCQ,QAHqC,iBAK5C,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBJ,UAAU,CAAC,SAAAK,CAAC,QAAI,CAACA,CAAL,EAAF,CAAV,CACD,CAFD,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,CAAC,CAAI,CAC3BL,iBAAiB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,CACD,CAFD,CAGA,GAAMC,CAAAA,YAAY,2FAAG,iJACfT,cAAc,CAACU,MAAf,CAAwB,CADT,gDAEER,CAAAA,QAAQ,iBAAUN,EAAV,UAAqB,CAC9Ce,MAAM,CAAEf,EADsC,CAE9CgB,KAAK,CAAEZ,cAFuC,CAArB,CAFV,QAEXa,IAFW,eAMjB,GAAIA,IAAI,GAAK,GAAT,EAAgBA,IAAI,GAAK,GAA7B,CAAkC,CAChChB,SAAS,CAAC,SAAAO,CAAC,QAAI,CAACA,CAAL,EAAF,CAAT,CACAH,iBAAiB,CAAC,EAAD,CAAjB,CACAF,UAAU,CAAC,SAAAK,CAAC,QAAI,CAACA,CAAL,EAAF,CAAV,CACD,CAJD,IAIO,CACLU,KAAK,CAAC,aAAD,CAAL,CACAjB,SAAS,CAAC,SAAAO,CAAC,QAAI,CAACA,CAAL,EAAF,CAAT,CACD,CAbgB,6BAejBU,KAAK,CAAC,gBAAD,CAAL,CAfiB,sDAAH,kBAAZL,CAAAA,YAAY,2CAAlB,CAmBA,mBACE,aAAK,SAAS,CAAC,qBAAf,wBACE,eAAQ,OAAO,CAAEN,WAAjB,uBADF,CAEGL,OAAO,cACN,aAAK,SAAS,CAAC,iBAAf,CAAiC,KAAK,CAAE,CAAEiB,QAAQ,CAAE,MAAZ,CAAxC,wBACE,cACE,WAAW,CAAC,iBADd,CAEE,KAAK,CAAEf,cAFT,CAGE,QAAQ,CAAEK,eAHZ,CAIE,KAAK,CAAE,CAAEW,OAAO,CAAE,OAAX,CAJT,EADF,cAOE,eAAQ,OAAO,CAAEP,YAAjB,2BAPF,GADM,CAUJ,IAZN,GADF,CAgBD,CA9CD,CAgDA,cAAed,CAAAA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { usePostApi } from '../../api';\n\nconst ChecklistModal = ({ id, setUpdate }) => {\n  const [clicked, setClicked] = useState(false);\n  const [checkListTitle, setCheckListTitle] = useState('');\n  const [postData] = usePostApi();\n\n  const clickButton = () => {\n    setClicked(p => !p);\n  };\n  const onChangeHandler = e => {\n    setCheckListTitle(e.target.value);\n  };\n  const addCheckList = async () => {\n    if (checkListTitle.length > 0) {\n      const code = await postData(`/card/${id}/todo`, {\n        cardId: id,\n        title: checkListTitle,\n      });\n      if (code === 201 || code === 200) {\n        setUpdate(p => !p);\n        setCheckListTitle('');\n        setClicked(p => !p);\n      } else {\n        alert('체크리스트 생성 실패');\n        setUpdate(p => !p);\n      }\n    } else {\n      alert('title을 입력해주세요.');\n    }\n  };\n\n  return (\n    <div className='add-checklist-modal'>\n      <button onClick={clickButton}>CheckList</button>\n      {clicked ? (\n        <div className='checkList-modal' style={{ overflow: 'auto' }}>\n          <input\n            placeholder='checklist title'\n            value={checkListTitle}\n            onChange={onChangeHandler}\n            style={{ display: 'block' }}\n          />\n          <button onClick={addCheckList}>Add Checklist</button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChecklistModal;\n"]},"metadata":{},"sourceType":"module"}