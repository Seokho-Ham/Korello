{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cocoball/korello-practice/korello/src/components/modal/ChecklistForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useUpdateApi, useDeleteApi } from '../../api/index';\n\nconst ChecklistForm = ({\n  el,\n  setUpdate\n}) => {\n  _s();\n\n  const [updateData] = useUpdateApi();\n  const [deleteData] = useDeleteApi();\n  const [newTitle, setNewTitle] = useState(el.title);\n  const [changeButton, setChangebutton] = useState(false);\n\n  const onChangeTitle = e => {\n    setNewTitle(e.target.value);\n  };\n\n  const checkboxHandler = async e => {\n    const code = await updateData(`/todo/${e.target.name}/status`);\n\n    if (code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  const changeChecklist = async () => {\n    if (changeButton) {\n      if (newTitle.length > 0 && newTitle !== el.title) {\n        const code = await updateData(`/todo/${el.todoId}`, {\n          title: newTitle\n        });\n\n        if (code === 200) {\n          setChangebutton(false);\n          setUpdate(p => !p);\n        } else {\n          alert('실패');\n          setUpdate(p => !p);\n        }\n      } else {\n        setChangebutton(p => !p);\n      }\n    } else {\n      setChangebutton(p => !p);\n    }\n  };\n\n  const deleteCheckList = async () => {\n    const code = await deleteData(`/todo/${el.todoId}`);\n\n    if (code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist-item\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: el.todoId,\n        checked: el.status,\n        onChange: checkboxHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), changeButton ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"checklist-item-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: newTitle,\n          onChange: onChangeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeChecklist,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"checklist-item-title\",\n        onClick: changeChecklist,\n        children: el.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"checklist-delete\",\n        onClick: deleteCheckList,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChecklistForm, \"xMBYMThtI5k68n2QT7juO66shuw=\", false, function () {\n  return [useUpdateApi, useDeleteApi];\n});\n\n_c = ChecklistForm;\nexport default ChecklistForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChecklistForm\");","map":{"version":3,"sources":["/Users/cocoball/korello-practice/korello/src/components/modal/ChecklistForm.jsx"],"names":["React","useState","useUpdateApi","useDeleteApi","ChecklistForm","el","setUpdate","updateData","deleteData","newTitle","setNewTitle","title","changeButton","setChangebutton","onChangeTitle","e","target","value","checkboxHandler","code","name","p","alert","changeChecklist","length","todoId","deleteCheckList","status"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useUpdateApi, useDeleteApi } from '../../api/index';\n\nconst ChecklistForm = ({ el, setUpdate }) => {\n  const [updateData] = useUpdateApi();\n  const [deleteData] = useDeleteApi();\n  const [newTitle, setNewTitle] = useState(el.title);\n  const [changeButton, setChangebutton] = useState(false);\n  const onChangeTitle = e => {\n    setNewTitle(e.target.value);\n  };\n  const checkboxHandler = async e => {\n    const code = await updateData(`/todo/${e.target.name}/status`);\n    if (code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n  const changeChecklist = async () => {\n    if (changeButton) {\n      if (newTitle.length > 0 && newTitle !== el.title) {\n        const code = await updateData(`/todo/${el.todoId}`, {\n          title: newTitle,\n        });\n\n        if (code === 200) {\n          setChangebutton(false);\n          setUpdate(p => !p);\n        } else {\n          alert('실패');\n          setUpdate(p => !p);\n        }\n      } else {\n        setChangebutton(p => !p);\n      }\n    } else {\n      setChangebutton(p => !p);\n    }\n  };\n  const deleteCheckList = async () => {\n    const code = await deleteData(`/todo/${el.todoId}`);\n    if (code === 200) {\n      setUpdate(p => !p);\n    } else {\n      alert('실패');\n      setUpdate(p => !p);\n    }\n  };\n\n  return (\n    <div className='checklist-item'>\n      <>\n        <input\n          type='checkbox'\n          name={el.todoId}\n          checked={el.status}\n          onChange={checkboxHandler}\n        />\n        {changeButton ? (\n          <span className='checklist-item-title'>\n            <input value={newTitle} onChange={onChangeTitle} />\n            <button onClick={changeChecklist}>수정</button>\n          </span>\n        ) : (\n          <span className='checklist-item-title' onClick={changeChecklist}>\n            {el.title}\n          </span>\n        )}\n        <button className='checklist-delete' onClick={deleteCheckList}>\n          X\n        </button>\n      </>\n    </div>\n  );\n};\n\nexport default ChecklistForm;\n"]},"metadata":{},"sourceType":"module"}