{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/cocoball/Korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cocoball/Korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cocoball/Korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{usePostApi}from'../../api/index';var AddTagButton=function AddTagButton(_ref){var url=_ref.url,setUpdate=_ref.setUpdate;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),tagName=_useState2[0],setTagName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),cardName=_useState4[0],setCardName=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),clicked=_useState6[0],setClicked=_useState6[1];var _usePostApi=usePostApi(),_usePostApi2=_slicedToArray(_usePostApi,1),postData=_usePostApi2[0];var onClickHandler=function onClickHandler(){setTagName('');setCardName('');setClicked(function(prevState){return!prevState;});};var onChangeHandler=function onChangeHandler(e){setTagName(e.target.value);};var onCardChangeHandler=function onCardChangeHandler(e){setCardName(e.target.value);};var addTag=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var code;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(tagName.length===0||cardName.length===0)){_context.next=4;break;}alert('빈칸이 있습니다.');_context.next=8;break;case 4:_context.next=6;return postData(\"\".concat(url.slice(0,url.length-1)),{tagValue:tagName,name:cardName});case 6:code=_context.sent;if(code===201){setTagName('');setCardName('');setUpdate(function(prevState){return!prevState;});setClicked(function(prevState){return!prevState;});}else{alert('생성에 실패했습니다.');setTagName('');}case 8:case\"end\":return _context.stop();}}},_callee);}));return function addTag(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tag-add-button\",style:{display:clicked?'inline-block':'none'},children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"tag name\",value:tagName,onChange:onChangeHandler}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"card name\",value:cardName,onChange:onCardChangeHandler}),/*#__PURE__*/_jsx(\"button\",{className:\"tag-add-bt\",onClick:addTag,children:\"Add\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tag-add-bt\",onClick:onClickHandler,children:\"Cancel\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tag-add-button\",style:{display:clicked?'none':'inline-block'},children:/*#__PURE__*/_jsx(\"button\",{className:\"tag-add-bt\",onClick:onClickHandler,children:\"Add Tag\"})})]});};export default AddTagButton;","map":{"version":3,"sources":["/Users/cocoball/Korello/src/components/card/AddTagButton.jsx"],"names":["React","useState","usePostApi","AddTagButton","url","setUpdate","tagName","setTagName","cardName","setCardName","clicked","setClicked","postData","onClickHandler","prevState","onChangeHandler","e","target","value","onCardChangeHandler","addTag","length","alert","slice","tagValue","name","code","display"],"mappings":"ojBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,iBAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAwB,IAArBC,CAAAA,GAAqB,MAArBA,GAAqB,CAAhBC,SAAgB,MAAhBA,SAAgB,eACbJ,QAAQ,CAAC,EAAD,CADK,wCACpCK,OADoC,eAC3BC,UAD2B,8BAEXN,QAAQ,CAAC,EAAD,CAFG,yCAEpCO,QAFoC,eAE1BC,WAF0B,8BAGbR,QAAQ,CAAC,KAAD,CAHK,yCAGpCS,OAHoC,eAG3BC,UAH2B,+BAIxBT,UAAU,EAJc,4CAIpCU,QAJoC,iBAM3C,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BN,UAAU,CAAC,EAAD,CAAV,CACAE,WAAW,CAAC,EAAD,CAAX,CACAE,UAAU,CAAC,SAAAG,SAAS,QAAI,CAACA,SAAL,EAAV,CAAV,CACD,CAJD,CAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,CAAC,CAAI,CAC3BT,UAAU,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CACD,CAFD,CAGA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAH,CAAC,CAAI,CAC/BP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CAFD,CAIA,GAAME,CAAAA,MAAM,2FAAG,iJACTd,OAAO,CAACe,MAAR,GAAmB,CAAnB,EAAwBb,QAAQ,CAACa,MAAT,GAAoB,CADnC,0BAEXC,KAAK,CAAC,WAAD,CAAL,CAFW,mDAIQV,CAAAA,QAAQ,WAAIR,GAAG,CAACmB,KAAJ,CAAU,CAAV,CAAanB,GAAG,CAACiB,MAAJ,CAAa,CAA1B,CAAJ,EAAoC,CAC7DG,QAAQ,CAAElB,OADmD,CAE7DmB,IAAI,CAAEjB,QAFuD,CAApC,CAJhB,QAILkB,IAJK,eAQX,GAAIA,IAAI,GAAK,GAAb,CAAkB,CAChBnB,UAAU,CAAC,EAAD,CAAV,CACAE,WAAW,CAAC,EAAD,CAAX,CACAJ,SAAS,CAAC,SAAAS,SAAS,QAAI,CAACA,SAAL,EAAV,CAAT,CACAH,UAAU,CAAC,SAAAG,SAAS,QAAI,CAACA,SAAL,EAAV,CAAV,CACD,CALD,IAKO,CACLQ,KAAK,CAAC,aAAD,CAAL,CACAf,UAAU,CAAC,EAAD,CAAV,CACD,CAhBU,sDAAH,kBAANa,CAAAA,MAAM,2CAAZ,CAoBA,mBACE,wCACE,aACE,SAAS,CAAC,gBADZ,CAEE,KAAK,CAAE,CAAEO,OAAO,CAAEjB,OAAO,CAAG,cAAH,CAAoB,MAAtC,CAFT,wBAIE,cACE,WAAW,CAAC,UADd,CAEE,KAAK,CAAEJ,OAFT,CAGE,QAAQ,CAAES,eAHZ,EAJF,cASE,cACE,WAAW,CAAC,WADd,CAEE,KAAK,CAAEP,QAFT,CAGE,QAAQ,CAAEW,mBAHZ,EATF,cAcE,eAAQ,SAAS,CAAC,YAAlB,CAA+B,OAAO,CAAEC,MAAxC,iBAdF,cAiBE,eAAQ,SAAS,CAAC,YAAlB,CAA+B,OAAO,CAAEP,cAAxC,oBAjBF,GADF,cAsBE,YACE,SAAS,CAAC,gBADZ,CAEE,KAAK,CAAE,CAAEc,OAAO,CAAEjB,OAAO,CAAG,MAAH,CAAY,cAA9B,CAFT,uBAIE,eAAQ,SAAS,CAAC,YAAlB,CAA+B,OAAO,CAAEG,cAAxC,qBAJF,EAtBF,GADF,CAiCD,CAvED,CAyEA,cAAeV,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { usePostApi } from '../../api/index';\n\nconst AddTagButton = ({ url, setUpdate }) => {\n  const [tagName, setTagName] = useState('');\n  const [cardName, setCardName] = useState('');\n  const [clicked, setClicked] = useState(false);\n  const [postData] = usePostApi();\n\n  const onClickHandler = () => {\n    setTagName('');\n    setCardName('');\n    setClicked(prevState => !prevState);\n  };\n  const onChangeHandler = e => {\n    setTagName(e.target.value);\n  };\n  const onCardChangeHandler = e => {\n    setCardName(e.target.value);\n  };\n\n  const addTag = async () => {\n    if (tagName.length === 0 || cardName.length === 0) {\n      alert('빈칸이 있습니다.');\n    } else {\n      const code = await postData(`${url.slice(0, url.length - 1)}`, {\n        tagValue: tagName,\n        name: cardName,\n      });\n      if (code === 201) {\n        setTagName('');\n        setCardName('');\n        setUpdate(prevState => !prevState);\n        setClicked(prevState => !prevState);\n      } else {\n        alert('생성에 실패했습니다.');\n        setTagName('');\n      }\n    }\n  };\n\n  return (\n    <>\n      <div\n        className='tag-add-button'\n        style={{ display: clicked ? 'inline-block' : 'none' }}\n      >\n        <input\n          placeholder='tag name'\n          value={tagName}\n          onChange={onChangeHandler}\n        />\n        <input\n          placeholder='card name'\n          value={cardName}\n          onChange={onCardChangeHandler}\n        />\n        <button className='tag-add-bt' onClick={addTag}>\n          Add\n        </button>\n        <button className='tag-add-bt' onClick={onClickHandler}>\n          Cancel\n        </button>\n      </div>\n      <div\n        className='tag-add-button'\n        style={{ display: clicked ? 'none' : 'inline-block' }}\n      >\n        <button className='tag-add-bt' onClick={onClickHandler}>\n          Add Tag\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default AddTagButton;\n"]},"metadata":{},"sourceType":"module"}