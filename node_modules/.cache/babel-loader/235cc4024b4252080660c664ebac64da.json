{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cocoball/Korello/src/components/card/CardListForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from 'react';\nimport { usePostApi, useUpdateApi } from '../../api/index';\nimport { useDrag } from 'react-dnd';\nimport CardModal from './CardModal';\n\nconst CardListForm = ({\n  id,\n  title,\n  tag,\n  memberNames,\n  labels,\n  url,\n  setUpdate\n}) => {\n  _s();\n\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: 'card',\n      id: id,\n      tagValue: tag\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [edit, setEdit] = useState(false);\n  const [cardTitle, setCardTitle] = useState(title);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [postData] = usePostApi();\n  const [updateData] = useUpdateApi();\n\n  const editCard = () => {\n    setEdit(p => !p);\n  };\n\n  const inputHandler = e => {\n    setCardTitle(e.target.value);\n  };\n\n  const clickModal = () => {\n    setModalVisible(p => !p);\n  };\n\n  const sendUpdate = async () => {\n    if (cardTitle !== title) {\n      let code = await updateData(url.slice(0, url.length - 1) + '/name', {\n        id: id,\n        name: cardTitle\n      });\n\n      if (code === 200) {\n        setEdit(p => !p);\n        setUpdate(prevState => !prevState);\n      } else {\n        alert('update 실패');\n      }\n    } else {\n      setEdit(p => !p);\n    }\n  };\n\n  const deleteCard = async () => {\n    console.log(id);\n    let result_code = await postData(url.slice(0, url.length - 1) + '/delete', {\n      id: id\n    });\n\n    if (result_code === 201) {\n      setUpdate(prevState => !prevState);\n    } else {\n      alert('삭제에 실패하였습니다.');\n      setUpdate(prevState => !prevState);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modalVisible ? /*#__PURE__*/_jsxDEV(CardModal, {\n      onClose: clickModal,\n      id: id,\n      title: title,\n      tag: tag,\n      url: url,\n      setUpdate: setUpdate,\n      labels: labels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      opacity: isDragging ? 0.5 : 1,\n      ref: edit ? null : drag,\n      children: [labels.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-labels\",\n        children: labels.sort((a, b) => a.id - b.id).map((el, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          style: {\n            backgroundColor: el.color\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : null, edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: cardTitle,\n          onChange: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendUpdate,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        onClick: editCard,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), edit ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal\",\n          onClick: clickModal,\n          children: \"modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-delete-button\",\n          onClick: deleteCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CardListForm, \"sIRD14gADWYJS7jGXmOIrW7hJ+k=\", false, function () {\n  return [useDrag, usePostApi, useUpdateApi];\n});\n\n_c = CardListForm;\nexport default _c2 = /*#__PURE__*/memo(CardListForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardListForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/cocoball/Korello/src/components/card/CardListForm.jsx"],"names":["React","memo","useState","usePostApi","useUpdateApi","useDrag","CardModal","CardListForm","id","title","tag","memberNames","labels","url","setUpdate","isDragging","drag","item","type","tagValue","collect","monitor","edit","setEdit","cardTitle","setCardTitle","modalVisible","setModalVisible","postData","updateData","editCard","p","inputHandler","e","target","value","clickModal","sendUpdate","code","slice","length","name","prevState","alert","deleteCard","console","log","result_code","sort","a","b","map","el","i","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport { usePostApi, useUpdateApi } from '../../api/index';\nimport { useDrag } from 'react-dnd';\nimport CardModal from './CardModal';\n\nconst CardListForm = ({\n  id,\n  title,\n  tag,\n  memberNames,\n  labels,\n  url,\n  setUpdate,\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'card', id: id, tagValue: tag },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const [edit, setEdit] = useState(false);\n  const [cardTitle, setCardTitle] = useState(title);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [postData] = usePostApi();\n  const [updateData] = useUpdateApi();\n\n  const editCard = () => {\n    setEdit(p => !p);\n  };\n  const inputHandler = e => {\n    setCardTitle(e.target.value);\n  };\n\n  const clickModal = () => {\n    setModalVisible(p => !p);\n  };\n\n  const sendUpdate = async () => {\n    if (cardTitle !== title) {\n      let code = await updateData(url.slice(0, url.length - 1) + '/name', {\n        id: id,\n        name: cardTitle,\n      });\n      if (code === 200) {\n        setEdit(p => !p);\n        setUpdate(prevState => !prevState);\n      } else {\n        alert('update 실패');\n      }\n    } else {\n      setEdit(p => !p);\n    }\n  };\n\n  const deleteCard = async () => {\n    console.log(id);\n    let result_code = await postData(url.slice(0, url.length - 1) + '/delete', {\n      id: id,\n    });\n    if (result_code === 201) {\n      setUpdate(prevState => !prevState);\n    } else {\n      alert('삭제에 실패하였습니다.');\n      setUpdate(prevState => !prevState);\n    }\n  };\n\n  return (\n    <>\n      {modalVisible ? (\n        <CardModal\n          onClose={clickModal}\n          id={id}\n          title={title}\n          tag={tag}\n          url={url}\n          setUpdate={setUpdate}\n          labels={labels}\n        />\n      ) : null}\n      <div\n        className='card'\n        opacity={isDragging ? 0.5 : 1}\n        ref={edit ? null : drag}\n      >\n        {labels.length > 0 ? (\n          <div className='card-labels'>\n            {labels\n              .sort((a, b) => a.id - b.id)\n              .map((el, i) => (\n                <span\n                  key={i}\n                  className='label'\n                  style={{\n                    backgroundColor: el.color,\n                  }}\n                ></span>\n              ))}\n          </div>\n        ) : null}\n        {edit ? (\n          <div className='card-input'>\n            <input value={cardTitle} onChange={inputHandler} />\n            <button onClick={sendUpdate}>save</button>\n          </div>\n        ) : (\n          <div className='card-title' onClick={editCard}>\n            {title}\n          </div>\n        )}\n        {edit ? null : (\n          <div className='card-buttons'>\n            <button className='modal' onClick={clickModal}>\n              modal\n            </button>\n            <span className='card-delete-button' onClick={deleteCard}></span>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(CardListForm);\n"]},"metadata":{},"sourceType":"module"}