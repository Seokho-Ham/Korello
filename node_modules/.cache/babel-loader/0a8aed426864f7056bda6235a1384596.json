{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/cocoball/korello-practice/korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cocoball/korello-practice/korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cocoball/korello-practice/korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{usePostApi}from'../../api';import ChecklistForm from'./ChecklistForm';var Checklist=function Checklist(_ref){var id=_ref.id,data=_ref.data,setUpdate=_ref.setUpdate,percent=_ref.percent;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _usePostApi=usePostApi(),_usePostApi2=_slicedToArray(_usePostApi,1),postData=_usePostApi2[0];var clickButtonHandler=function clickButtonHandler(){setClicked(function(p){return!p;});};var addChecklistHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var code;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(title.length>0)){_context.next=7;break;}_context.next=3;return postData(\"/card/\".concat(id,\"/todo\"),{cardId:id,title:title});case 3:code=_context.sent;if(code===201||code===200){setTitle('');setClicked(function(p){return!p;});setUpdate(function(p){return!p;});}else{alert('생성 실패!');}_context.next=8;break;case 7:alert('title을 입력해주세요');case 8:case\"end\":return _context.stop();}}},_callee);}));return function addChecklistHandler(){return _ref2.apply(this,arguments);};}();var onChangeHandler=function onChangeHandler(e){setTitle(e.target.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"checklist-header\",children:[/*#__PURE__*/_jsx(\"h4\",{style:{margin:'0px 0px 5px 0px'},children:\"CheckList\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-percent\",children:[percent,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-percent-bar\",style:{width:\"\".concat(percent,\"%\")}})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checklist- inner\",children:data.map(function(el,i){return/*#__PURE__*/_jsx(ChecklistForm,{el:el,setUpdate:setUpdate},i);})}),/*#__PURE__*/_jsx(\"div\",{className:\"checklist-add-button\",children:clicked?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"title\",value:title,onChange:onChangeHandler}),/*#__PURE__*/_jsx(\"button\",{onClick:addChecklistHandler,children:\"Add\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clickButtonHandler,children:\"Cancel\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:clickButtonHandler,children:\"Add an item\"})})]});};export default Checklist;","map":{"version":3,"sources":["/Users/cocoball/korello-practice/korello/src/components/modal/Checklist.jsx"],"names":["React","useState","usePostApi","ChecklistForm","Checklist","id","data","setUpdate","percent","clicked","setClicked","title","setTitle","postData","clickButtonHandler","p","addChecklistHandler","length","cardId","code","alert","onChangeHandler","e","target","value","margin","width","map","el","i"],"mappings":"umBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAsC,IAAnCC,CAAAA,EAAmC,MAAnCA,EAAmC,CAA/BC,IAA+B,MAA/BA,IAA+B,CAAzBC,SAAyB,MAAzBA,SAAyB,CAAdC,OAAc,MAAdA,OAAc,eACxBP,QAAQ,CAAC,KAAD,CADgB,wCAC/CQ,OAD+C,eACtCC,UADsC,8BAE5BT,QAAQ,CAAC,EAAD,CAFoB,yCAE/CU,KAF+C,eAExCC,QAFwC,+BAGnCV,UAAU,EAHyB,4CAG/CW,QAH+C,iBAItD,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/BJ,UAAU,CAAC,SAAAK,CAAC,QAAI,CAACA,CAAL,EAAF,CAAV,CACD,CAFD,CAGA,GAAMC,CAAAA,mBAAmB,2FAAG,iJACtBL,KAAK,CAACM,MAAN,CAAe,CADO,gDAELJ,CAAAA,QAAQ,iBAAUR,EAAV,UAAqB,CAC9Ca,MAAM,CAAEb,EADsC,CAE9CM,KAAK,CAAEA,KAFuC,CAArB,CAFH,QAElBQ,IAFkB,eAMxB,GAAIA,IAAI,GAAK,GAAT,EAAgBA,IAAI,GAAK,GAA7B,CAAkC,CAChCP,QAAQ,CAAC,EAAD,CAAR,CACAF,UAAU,CAAC,SAAAK,CAAC,QAAI,CAACA,CAAL,EAAF,CAAV,CACAR,SAAS,CAAC,SAAAQ,CAAC,QAAI,CAACA,CAAL,EAAF,CAAT,CACD,CAJD,IAIO,CACLK,KAAK,CAAC,QAAD,CAAL,CACD,CAZuB,6BAcxBA,KAAK,CAAC,eAAD,CAAL,CAdwB,sDAAH,kBAAnBJ,CAAAA,mBAAmB,2CAAzB,CAiBA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,CAAC,CAAI,CAC3BV,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACD,CAFD,CAGA,mBACE,wCACE,aAAK,SAAS,CAAC,kBAAf,wBACE,WAAI,KAAK,CAAE,CAAEC,MAAM,CAAE,iBAAV,CAAX,uBADF,cAEE,aAAK,SAAS,CAAC,oBAAf,wBACE,aAAK,SAAS,CAAC,kBAAf,WAAmCjB,OAAnC,OADF,cAEE,YAAK,SAAS,CAAC,cAAf,uBACE,YACE,SAAS,CAAC,sBADZ,CAEE,KAAK,CAAE,CACLkB,KAAK,WAAKlB,OAAL,KADA,CAFT,EADF,EAFF,GAFF,GADF,cAeE,YAAK,SAAS,CAAC,kBAAf,UACGF,IAAI,CAACqB,GAAL,CAAS,SAACC,EAAD,CAAKC,CAAL,qBACR,KAAC,aAAD,EAAuB,EAAE,CAAED,EAA3B,CAA+B,SAAS,CAAErB,SAA1C,EAAoBsB,CAApB,CADQ,EAAT,CADH,EAfF,cAoBE,YAAK,SAAS,CAAC,sBAAf,UACGpB,OAAO,cACN,wCACE,cACE,WAAW,CAAC,OADd,CAEE,KAAK,CAAEE,KAFT,CAGE,QAAQ,CAAEU,eAHZ,EADF,cAME,eAAQ,OAAO,CAAEL,mBAAjB,iBANF,cAOE,eAAQ,OAAO,CAAEF,kBAAjB,oBAPF,GADM,cAWN,eAAQ,OAAO,CAAEA,kBAAjB,yBAZJ,EApBF,GADF,CAsCD,CAjED,CAmEA,cAAeV,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { usePostApi } from '../../api';\nimport ChecklistForm from './ChecklistForm';\n\nconst Checklist = ({ id, data, setUpdate, percent }) => {\n  const [clicked, setClicked] = useState(false);\n  const [title, setTitle] = useState('');\n  const [postData] = usePostApi();\n  const clickButtonHandler = () => {\n    setClicked(p => !p);\n  };\n  const addChecklistHandler = async () => {\n    if (title.length > 0) {\n      const code = await postData(`/card/${id}/todo`, {\n        cardId: id,\n        title: title,\n      });\n      if (code === 201 || code === 200) {\n        setTitle('');\n        setClicked(p => !p);\n        setUpdate(p => !p);\n      } else {\n        alert('생성 실패!');\n      }\n    } else {\n      alert('title을 입력해주세요');\n    }\n  };\n  const onChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n  return (\n    <>\n      <div className='checklist-header'>\n        <h4 style={{ margin: '0px 0px 5px 0px' }}>CheckList</h4>\n        <div className='progress-container'>\n          <div className='progress-percent'>{percent}%</div>\n          <div className='progress-bar'>\n            <div\n              className='progress-percent-bar'\n              style={{\n                width: `${percent}%`,\n              }}\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div className='checklist- inner'>\n        {data.map((el, i) => (\n          <ChecklistForm key={i} el={el} setUpdate={setUpdate} />\n        ))}\n      </div>\n      <div className='checklist-add-button'>\n        {clicked ? (\n          <>\n            <input\n              placeholder='title'\n              value={title}\n              onChange={onChangeHandler}\n            ></input>\n            <button onClick={addChecklistHandler}>Add</button>\n            <button onClick={clickButtonHandler}>Cancel</button>\n          </>\n        ) : (\n          <button onClick={clickButtonHandler}>Add an item</button>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Checklist;\n"]},"metadata":{},"sourceType":"module"}