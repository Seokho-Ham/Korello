{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/cocoball/Korello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useGetApi}from'../../api/index';import BoardForm from'./BoardForm';import NewBoardForm from'./NewBoardForm';var BoardList=function BoardList(_ref){var match=_ref.match;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),update=_useState2[0],setUpdate=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),display=_useState4[0],setDisplay=_useState4[1];var _useGetApi=useGetApi('get','/boards',update),_useGetApi2=_slicedToArray(_useGetApi,1),data=_useGetApi2[0];var onClickHandler=function onClickHandler(){setDisplay(function(p){return!p;});};var renderBoards=function renderBoards(){return data.map(function(el){return/*#__PURE__*/_jsx(BoardForm,{url:match.path,data:el,setUpdate:setUpdate},el.id);});};return/*#__PURE__*/_jsxs(\"div\",{id:\"board-container\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"board-header\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"board-header-items\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Board Lists\"}),/*#__PURE__*/_jsx(\"div\",{id:\"board-button\",children:/*#__PURE__*/_jsxs(\"span\",{id:\"board-add-button\",children:[/*#__PURE__*/_jsx(NewBoardForm,{onClickHandler:onClickHandler,setUpdate:setUpdate,display:display}),/*#__PURE__*/_jsx(\"button\",{onClick:onClickHandler,style:{display:display?'none':'block'},children:\"Add Board\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{id:\"board-list-container\",children:data.length>0?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{id:\"board-list\",children:renderBoards()})}):/*#__PURE__*/_jsx(\"div\",{id:\"board-list\",children:\"\\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]});};export default BoardList;","map":{"version":3,"sources":["/Users/cocoball/Korello/src/components/board/BoardList.jsx"],"names":["React","useState","useGetApi","BoardForm","NewBoardForm","BoardList","match","update","setUpdate","display","setDisplay","data","onClickHandler","p","renderBoards","map","el","path","id","length"],"mappings":"2RAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,eACHL,QAAQ,CAAC,KAAD,CADL,wCACxBM,MADwB,eAChBC,SADgB,8BAEDP,QAAQ,CAAC,KAAD,CAFP,yCAExBQ,OAFwB,eAEfC,UAFe,8BAGhBR,SAAS,CAAC,KAAD,CAAQ,SAAR,CAAmBK,MAAnB,CAHO,0CAGxBI,IAHwB,gBAK/B,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BF,UAAU,CAAC,SAAAG,CAAC,QAAI,CAACA,CAAL,EAAF,CAAV,CACD,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,MAAOH,CAAAA,IAAI,CAACI,GAAL,CAAS,SAAAC,EAAE,CAAI,CACpB,mBACE,KAAC,SAAD,EAEE,GAAG,CAAEV,KAAK,CAACW,IAFb,CAGE,IAAI,CAAED,EAHR,CAIE,SAAS,CAAER,SAJb,EACOQ,EAAE,CAACE,EADV,CADF,CAQD,CATM,CAAP,CAUD,CAXD,CAYA,mBACE,aAAK,EAAE,CAAC,iBAAR,wBACE,YAAK,EAAE,CAAC,cAAR,uBACE,aAAK,EAAE,CAAC,oBAAR,wBACE,mCADF,cAEE,YAAK,EAAE,CAAC,cAAR,uBACE,cAAM,EAAE,CAAC,kBAAT,wBACE,KAAC,YAAD,EACE,cAAc,CAAEN,cADlB,CAEE,SAAS,CAAEJ,SAFb,CAGE,OAAO,CAAEC,OAHX,EADF,cAME,eACE,OAAO,CAAEG,cADX,CAEE,KAAK,CAAE,CAAEH,OAAO,CAAEA,OAAO,CAAG,MAAH,CAAY,OAA9B,CAFT,uBANF,GADF,EAFF,GADF,EADF,cAqBE,YAAK,EAAE,CAAC,sBAAR,UACGE,IAAI,CAACQ,MAAL,CAAc,CAAd,cACC,sCACE,YAAK,EAAE,CAAC,YAAR,UAAsBL,YAAY,EAAlC,EADF,EADD,cAKC,YAAK,EAAE,CAAC,YAAR,gEANJ,EArBF,GADF,CAiCD,CAtDD,CAwDA,cAAeT,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useGetApi } from '../../api/index';\nimport BoardForm from './BoardForm';\nimport NewBoardForm from './NewBoardForm';\n\nconst BoardList = ({ match }) => {\n  const [update, setUpdate] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [data] = useGetApi('get', '/boards', update);\n\n  const onClickHandler = () => {\n    setDisplay(p => !p);\n  };\n\n  const renderBoards = () => {\n    return data.map(el => {\n      return (\n        <BoardForm\n          key={el.id}\n          url={match.path}\n          data={el}\n          setUpdate={setUpdate}\n        />\n      );\n    });\n  };\n  return (\n    <div id='board-container'>\n      <div id='board-header'>\n        <div id='board-header-items'>\n          <h2>Board Lists</h2>\n          <div id='board-button'>\n            <span id='board-add-button'>\n              <NewBoardForm\n                onClickHandler={onClickHandler}\n                setUpdate={setUpdate}\n                display={display}\n              />\n              <button\n                onClick={onClickHandler}\n                style={{ display: display ? 'none' : 'block' }}\n              >\n                Add Board\n              </button>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div id='board-list-container'>\n        {data.length > 0 ? (\n          <>\n            <div id='board-list'>{renderBoards()}</div>\n          </>\n        ) : (\n          <div id='board-list'>데이터가 없습니다.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BoardList;\n"]},"metadata":{},"sourceType":"module"}